load("//tools/build_rules:java_rules.bzl", "java_immutables_library", "java_library_with_plugins")

java_library_with_plugins(
    name = "rules",
    srcs = [
        "AbstractGenruleDescription.java",
        "CommandAlias.java",
        "CommandAliasDescription.java",
        "ExportFile.java",
        "ExportFileDescription.java",
        "Genrule.java",
        "GenruleBinary.java",
        "GenruleDescription.java",
        "ShBinary.java",
        "ShBinaryDescription.java",
        "ShTest.java",
        "ShTestDescription.java",
        "ShellDescriptionsProvider.java",
    ],
    tests = [
        "//test/com/facebook/buck/shell:shell",
    ],
    visibility = ["PUBLIC"],
    deps = [
        ":steps",
        ":worker",
        "//src/com/facebook/buck/android:helpers",
        "//src/com/facebook/buck/android:utils",
        "//src/com/facebook/buck/android/toolchain:toolchain",
        "//src/com/facebook/buck/android/toolchain/ndk:ndk",
        "//src/com/facebook/buck/event/external:external_lib",
        "//src/com/facebook/buck/io:io",
        "//src/com/facebook/buck/io/file:file",
        "//src/com/facebook/buck/model:model",
        "//src/com/facebook/buck/model/macros:macros",
        "//src/com/facebook/buck/parser:rule_pattern",
        "//src/com/facebook/buck/rules:build_rule",
        "//src/com/facebook/buck/rules:interfaces",
        "//src/com/facebook/buck/rules:rules",
        "//src/com/facebook/buck/rules:source_path",
        "//src/com/facebook/buck/rules/args:args",
        "//src/com/facebook/buck/rules/coercer:interface",
        "//src/com/facebook/buck/rules/keys:keys",
        "//src/com/facebook/buck/rules/macros:macros",
        "//src/com/facebook/buck/rules/macros:types",
        "//src/com/facebook/buck/sandbox:sandbox",
        "//src/com/facebook/buck/shell/programrunner:programrunner",
        "//src/com/facebook/buck/step:step",
        "//src/com/facebook/buck/step/fs:fs",
        "//src/com/facebook/buck/test:test",
        "//src/com/facebook/buck/toolchain:toolchain",
        "//src/com/facebook/buck/util:exceptions",
        "//src/com/facebook/buck/util:util",
        "//src/com/facebook/buck/util/environment:platform",
        "//src/com/facebook/buck/versions:translator",
        "//src/com/facebook/buck/worker:worker_job_params",
        "//src/com/facebook/buck/worker:worker_pool_factory",
        "//src/com/facebook/buck/zip:zip",
        "//third-party/java/guava:guava",
        "//third-party/java/infer-annotations:infer-annotations",
        "//third-party/java/jackson:jackson-databind",
        "//third-party/java/stringtemplate:stringtemplate",
    ],
)

java_library(
    name = "steps",
    srcs = [
        "AbstractGenruleStep.java",
        "BashStep.java",
        "DefaultShellStep.java",
        "RunShTestAndRecordResultStep.java",
        "Shell.java",
        "ShellStep.java",
        "SymlinkFilesIntoDirectoryStep.java",
    ],
    tests = [
        "//test/com/facebook/buck/shell:shell",
    ],
    visibility = [
        "PUBLIC",
    ],
    deps = [
        "//src/com/facebook/buck/event:event",
        "//src/com/facebook/buck/event:interfaces",
        "//src/com/facebook/buck/event/external:external_lib",
        "//src/com/facebook/buck/io:io",
        "//src/com/facebook/buck/io/filesystem:filesystem",
        "//src/com/facebook/buck/log:api",
        "//src/com/facebook/buck/model:model",
        "//src/com/facebook/buck/rules:interfaces",
        "//src/com/facebook/buck/sandbox:sandbox",
        "//src/com/facebook/buck/shell/programrunner:programrunner",
        "//src/com/facebook/buck/step:step",
        "//src/com/facebook/buck/test:test",
        "//src/com/facebook/buck/test/result/type:type",
        "//src/com/facebook/buck/util:exceptions",
        "//src/com/facebook/buck/util:process_executor",
        "//src/com/facebook/buck/util:util",
        "//src/com/facebook/buck/util/environment:platform",
        "//third-party/java/guava:guava",
        "//third-party/java/jackson:jackson-databind",
        "//third-party/java/jsr:jsr305",
    ],
)

java_immutables_library(
    name = "worker",
    srcs = [
        "DefaultWorkerTool.java",
        "WorkerShellStep.java",
        "WorkerToolDescription.java",
    ],
    tests = [
        "//test/com/facebook/buck/shell:shell",
    ],
    visibility = ["PUBLIC"],
    deps = [
        ":worker_tool",
        "//src/com/facebook/buck/config:config",
        "//src/com/facebook/buck/event:event",
        "//src/com/facebook/buck/event:interfaces",
        "//src/com/facebook/buck/event/external:external_lib",
        "//src/com/facebook/buck/file:rules",
        "//src/com/facebook/buck/io:io",
        "//src/com/facebook/buck/model:model",
        "//src/com/facebook/buck/model/macros:macros",
        "//src/com/facebook/buck/parser:rule_pattern",
        "//src/com/facebook/buck/rules:build_rule",
        "//src/com/facebook/buck/rules:interfaces",
        "//src/com/facebook/buck/rules:rule_key",
        "//src/com/facebook/buck/rules:rules",
        "//src/com/facebook/buck/rules:source_path",
        "//src/com/facebook/buck/rules/args:args",
        "//src/com/facebook/buck/rules/keys:keys",
        "//src/com/facebook/buck/rules/macros:macros",
        "//src/com/facebook/buck/step:step",
        "//src/com/facebook/buck/util:exceptions",
        "//src/com/facebook/buck/util:process_executor",
        "//src/com/facebook/buck/util:util",
        "//src/com/facebook/buck/util/environment:platform",
        "//src/com/facebook/buck/worker:worker_job_params",
        "//src/com/facebook/buck/worker:worker_pool_factory",
        "//src/com/facebook/buck/worker:worker_process",
        "//third-party/java/guava:guava",
        "//third-party/java/infer-annotations:infer-annotations",
    ],
)

java_library(
    name = "worker_tool",
    srcs = [
        "WorkerTool.java",
    ],
    tests = [
        "//test/com/facebook/buck/shell:shell",
    ],
    visibility = ["PUBLIC"],
    deps = [
        "//src/com/facebook/buck/rules:build_rule",
        "//third-party/java/guava:guava",
    ],
)

export_file(
    name = "sh_binary_template",
    visibility = [
        "PUBLIC",
    ],
)
