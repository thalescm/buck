/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.facebook.buck.distributed.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-02-01")
public class FrontendRequest implements org.apache.thrift.TBase<FrontendRequest, FrontendRequest._Fields>, java.io.Serializable, Cloneable, Comparable<FrontendRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FrontendRequest");

  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField START_BUILD_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("startBuildRequest", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField BUILD_STATUS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("buildStatusRequest", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField LOG_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("logRequest", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField CAS_CONTAINS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("casContainsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_BUILD_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("createBuildRequest", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField STORE_LOCAL_CHANGES_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("storeLocalChangesRequest", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField FETCH_SOURCE_FILES_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("fetchSourceFilesRequest", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField STORE_BUILD_GRAPH_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("storeBuildGraphRequest", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField FETCH_BUILD_GRAPH_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("fetchBuildGraphRequest", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField SET_BUCK_VERSION_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("setBuckVersionRequest", org.apache.thrift.protocol.TType.STRUCT, (short)13);
  private static final org.apache.thrift.protocol.TField ANNOUNCEMENT_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("announcementRequest", org.apache.thrift.protocol.TType.STRUCT, (short)14);
  private static final org.apache.thrift.protocol.TField SET_BUCK_DOT_FILE_PATHS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("setBuckDotFilePathsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)15);
  private static final org.apache.thrift.protocol.TField MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("multiGetBuildSlaveLogDirRequest", org.apache.thrift.protocol.TType.STRUCT, (short)16);
  private static final org.apache.thrift.protocol.TField MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("multiGetBuildSlaveRealTimeLogsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)17);
  private static final org.apache.thrift.protocol.TField UPDATE_BUILD_SLAVE_STATUS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("updateBuildSlaveStatusRequest", org.apache.thrift.protocol.TType.STRUCT, (short)18);
  private static final org.apache.thrift.protocol.TField FETCH_BUILD_SLAVE_STATUS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("fetchBuildSlaveStatusRequest", org.apache.thrift.protocol.TType.STRUCT, (short)19);
  private static final org.apache.thrift.protocol.TField APPEND_BUILD_SLAVE_EVENTS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("appendBuildSlaveEventsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)20);
  private static final org.apache.thrift.protocol.TField MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("multiGetBuildSlaveEventsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)21);
  private static final org.apache.thrift.protocol.TField FETCH_RULE_KEY_LOGS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("fetchRuleKeyLogsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)22);
  private static final org.apache.thrift.protocol.TField STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("storeBuildSlaveFinishedStatsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)23);
  private static final org.apache.thrift.protocol.TField FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("fetchBuildSlaveFinishedStatsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)24);
  private static final org.apache.thrift.protocol.TField SET_COORDINATOR_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("setCoordinatorRequest", org.apache.thrift.protocol.TType.STRUCT, (short)25);
  private static final org.apache.thrift.protocol.TField ENQUEUE_MINIONS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("enqueueMinionsRequest", org.apache.thrift.protocol.TType.STRUCT, (short)26);
  private static final org.apache.thrift.protocol.TField SET_FINAL_BUILD_STATUS_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("setFinalBuildStatusRequest", org.apache.thrift.protocol.TType.STRUCT, (short)27);
  private static final org.apache.thrift.protocol.TField REPORT_COORDINATOR_ALIVE_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("reportCoordinatorAliveRequest", org.apache.thrift.protocol.TType.STRUCT, (short)28);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new FrontendRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new FrontendRequestTupleSchemeFactory();

  /**
   * 
   * @see FrontendRequestType
   */
  public FrontendRequestType type; // optional
  public StartBuildRequest startBuildRequest; // optional
  public BuildStatusRequest buildStatusRequest; // optional
  public LogRequest logRequest; // optional
  public CASContainsRequest casContainsRequest; // optional
  public CreateBuildRequest createBuildRequest; // optional
  public StoreLocalChangesRequest storeLocalChangesRequest; // optional
  public FetchSourceFilesRequest fetchSourceFilesRequest; // optional
  public StoreBuildGraphRequest storeBuildGraphRequest; // optional
  public FetchBuildGraphRequest fetchBuildGraphRequest; // optional
  public SetBuckVersionRequest setBuckVersionRequest; // optional
  public AnnouncementRequest announcementRequest; // optional
  public SetBuckDotFilePathsRequest setBuckDotFilePathsRequest; // optional
  public MultiGetBuildSlaveLogDirRequest multiGetBuildSlaveLogDirRequest; // optional
  public MultiGetBuildSlaveRealTimeLogsRequest multiGetBuildSlaveRealTimeLogsRequest; // optional
  public UpdateBuildSlaveStatusRequest updateBuildSlaveStatusRequest; // optional
  public FetchBuildSlaveStatusRequest fetchBuildSlaveStatusRequest; // optional
  public AppendBuildSlaveEventsRequest appendBuildSlaveEventsRequest; // optional
  public MultiGetBuildSlaveEventsRequest multiGetBuildSlaveEventsRequest; // optional
  public FetchRuleKeyLogsRequest fetchRuleKeyLogsRequest; // optional
  public StoreBuildSlaveFinishedStatsRequest storeBuildSlaveFinishedStatsRequest; // optional
  public FetchBuildSlaveFinishedStatsRequest fetchBuildSlaveFinishedStatsRequest; // optional
  public SetCoordinatorRequest setCoordinatorRequest; // optional
  public EnqueueMinionsRequest enqueueMinionsRequest; // optional
  public SetFinalBuildStatusRequest setFinalBuildStatusRequest; // optional
  public ReportCoordinatorAliveRequest reportCoordinatorAliveRequest; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see FrontendRequestType
     */
    TYPE((short)1, "type"),
    START_BUILD_REQUEST((short)2, "startBuildRequest"),
    BUILD_STATUS_REQUEST((short)3, "buildStatusRequest"),
    LOG_REQUEST((short)6, "logRequest"),
    CAS_CONTAINS_REQUEST((short)7, "casContainsRequest"),
    CREATE_BUILD_REQUEST((short)8, "createBuildRequest"),
    STORE_LOCAL_CHANGES_REQUEST((short)9, "storeLocalChangesRequest"),
    FETCH_SOURCE_FILES_REQUEST((short)10, "fetchSourceFilesRequest"),
    STORE_BUILD_GRAPH_REQUEST((short)11, "storeBuildGraphRequest"),
    FETCH_BUILD_GRAPH_REQUEST((short)12, "fetchBuildGraphRequest"),
    SET_BUCK_VERSION_REQUEST((short)13, "setBuckVersionRequest"),
    ANNOUNCEMENT_REQUEST((short)14, "announcementRequest"),
    SET_BUCK_DOT_FILE_PATHS_REQUEST((short)15, "setBuckDotFilePathsRequest"),
    MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST((short)16, "multiGetBuildSlaveLogDirRequest"),
    MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST((short)17, "multiGetBuildSlaveRealTimeLogsRequest"),
    UPDATE_BUILD_SLAVE_STATUS_REQUEST((short)18, "updateBuildSlaveStatusRequest"),
    FETCH_BUILD_SLAVE_STATUS_REQUEST((short)19, "fetchBuildSlaveStatusRequest"),
    APPEND_BUILD_SLAVE_EVENTS_REQUEST((short)20, "appendBuildSlaveEventsRequest"),
    MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST((short)21, "multiGetBuildSlaveEventsRequest"),
    FETCH_RULE_KEY_LOGS_REQUEST((short)22, "fetchRuleKeyLogsRequest"),
    STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST((short)23, "storeBuildSlaveFinishedStatsRequest"),
    FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST((short)24, "fetchBuildSlaveFinishedStatsRequest"),
    SET_COORDINATOR_REQUEST((short)25, "setCoordinatorRequest"),
    ENQUEUE_MINIONS_REQUEST((short)26, "enqueueMinionsRequest"),
    SET_FINAL_BUILD_STATUS_REQUEST((short)27, "setFinalBuildStatusRequest"),
    REPORT_COORDINATOR_ALIVE_REQUEST((short)28, "reportCoordinatorAliveRequest");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TYPE
          return TYPE;
        case 2: // START_BUILD_REQUEST
          return START_BUILD_REQUEST;
        case 3: // BUILD_STATUS_REQUEST
          return BUILD_STATUS_REQUEST;
        case 6: // LOG_REQUEST
          return LOG_REQUEST;
        case 7: // CAS_CONTAINS_REQUEST
          return CAS_CONTAINS_REQUEST;
        case 8: // CREATE_BUILD_REQUEST
          return CREATE_BUILD_REQUEST;
        case 9: // STORE_LOCAL_CHANGES_REQUEST
          return STORE_LOCAL_CHANGES_REQUEST;
        case 10: // FETCH_SOURCE_FILES_REQUEST
          return FETCH_SOURCE_FILES_REQUEST;
        case 11: // STORE_BUILD_GRAPH_REQUEST
          return STORE_BUILD_GRAPH_REQUEST;
        case 12: // FETCH_BUILD_GRAPH_REQUEST
          return FETCH_BUILD_GRAPH_REQUEST;
        case 13: // SET_BUCK_VERSION_REQUEST
          return SET_BUCK_VERSION_REQUEST;
        case 14: // ANNOUNCEMENT_REQUEST
          return ANNOUNCEMENT_REQUEST;
        case 15: // SET_BUCK_DOT_FILE_PATHS_REQUEST
          return SET_BUCK_DOT_FILE_PATHS_REQUEST;
        case 16: // MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST
          return MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST;
        case 17: // MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST
          return MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST;
        case 18: // UPDATE_BUILD_SLAVE_STATUS_REQUEST
          return UPDATE_BUILD_SLAVE_STATUS_REQUEST;
        case 19: // FETCH_BUILD_SLAVE_STATUS_REQUEST
          return FETCH_BUILD_SLAVE_STATUS_REQUEST;
        case 20: // APPEND_BUILD_SLAVE_EVENTS_REQUEST
          return APPEND_BUILD_SLAVE_EVENTS_REQUEST;
        case 21: // MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST
          return MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST;
        case 22: // FETCH_RULE_KEY_LOGS_REQUEST
          return FETCH_RULE_KEY_LOGS_REQUEST;
        case 23: // STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST
          return STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST;
        case 24: // FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST
          return FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST;
        case 25: // SET_COORDINATOR_REQUEST
          return SET_COORDINATOR_REQUEST;
        case 26: // ENQUEUE_MINIONS_REQUEST
          return ENQUEUE_MINIONS_REQUEST;
        case 27: // SET_FINAL_BUILD_STATUS_REQUEST
          return SET_FINAL_BUILD_STATUS_REQUEST;
        case 28: // REPORT_COORDINATOR_ALIVE_REQUEST
          return REPORT_COORDINATOR_ALIVE_REQUEST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.TYPE,_Fields.START_BUILD_REQUEST,_Fields.BUILD_STATUS_REQUEST,_Fields.LOG_REQUEST,_Fields.CAS_CONTAINS_REQUEST,_Fields.CREATE_BUILD_REQUEST,_Fields.STORE_LOCAL_CHANGES_REQUEST,_Fields.FETCH_SOURCE_FILES_REQUEST,_Fields.STORE_BUILD_GRAPH_REQUEST,_Fields.FETCH_BUILD_GRAPH_REQUEST,_Fields.SET_BUCK_VERSION_REQUEST,_Fields.ANNOUNCEMENT_REQUEST,_Fields.SET_BUCK_DOT_FILE_PATHS_REQUEST,_Fields.MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST,_Fields.MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST,_Fields.UPDATE_BUILD_SLAVE_STATUS_REQUEST,_Fields.FETCH_BUILD_SLAVE_STATUS_REQUEST,_Fields.APPEND_BUILD_SLAVE_EVENTS_REQUEST,_Fields.MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST,_Fields.FETCH_RULE_KEY_LOGS_REQUEST,_Fields.STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST,_Fields.FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST,_Fields.SET_COORDINATOR_REQUEST,_Fields.ENQUEUE_MINIONS_REQUEST,_Fields.SET_FINAL_BUILD_STATUS_REQUEST,_Fields.REPORT_COORDINATOR_ALIVE_REQUEST};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, FrontendRequestType.class)));
    tmpMap.put(_Fields.START_BUILD_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("startBuildRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StartBuildRequest.class)));
    tmpMap.put(_Fields.BUILD_STATUS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("buildStatusRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuildStatusRequest.class)));
    tmpMap.put(_Fields.LOG_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("logRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LogRequest.class)));
    tmpMap.put(_Fields.CAS_CONTAINS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("casContainsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CASContainsRequest.class)));
    tmpMap.put(_Fields.CREATE_BUILD_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("createBuildRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CreateBuildRequest.class)));
    tmpMap.put(_Fields.STORE_LOCAL_CHANGES_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("storeLocalChangesRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StoreLocalChangesRequest.class)));
    tmpMap.put(_Fields.FETCH_SOURCE_FILES_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("fetchSourceFilesRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FetchSourceFilesRequest.class)));
    tmpMap.put(_Fields.STORE_BUILD_GRAPH_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("storeBuildGraphRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StoreBuildGraphRequest.class)));
    tmpMap.put(_Fields.FETCH_BUILD_GRAPH_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("fetchBuildGraphRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FetchBuildGraphRequest.class)));
    tmpMap.put(_Fields.SET_BUCK_VERSION_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("setBuckVersionRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SetBuckVersionRequest.class)));
    tmpMap.put(_Fields.ANNOUNCEMENT_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("announcementRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AnnouncementRequest.class)));
    tmpMap.put(_Fields.SET_BUCK_DOT_FILE_PATHS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("setBuckDotFilePathsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SetBuckDotFilePathsRequest.class)));
    tmpMap.put(_Fields.MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("multiGetBuildSlaveLogDirRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MultiGetBuildSlaveLogDirRequest.class)));
    tmpMap.put(_Fields.MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("multiGetBuildSlaveRealTimeLogsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MultiGetBuildSlaveRealTimeLogsRequest.class)));
    tmpMap.put(_Fields.UPDATE_BUILD_SLAVE_STATUS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("updateBuildSlaveStatusRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, UpdateBuildSlaveStatusRequest.class)));
    tmpMap.put(_Fields.FETCH_BUILD_SLAVE_STATUS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("fetchBuildSlaveStatusRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FetchBuildSlaveStatusRequest.class)));
    tmpMap.put(_Fields.APPEND_BUILD_SLAVE_EVENTS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("appendBuildSlaveEventsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AppendBuildSlaveEventsRequest.class)));
    tmpMap.put(_Fields.MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("multiGetBuildSlaveEventsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MultiGetBuildSlaveEventsRequest.class)));
    tmpMap.put(_Fields.FETCH_RULE_KEY_LOGS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("fetchRuleKeyLogsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FetchRuleKeyLogsRequest.class)));
    tmpMap.put(_Fields.STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("storeBuildSlaveFinishedStatsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StoreBuildSlaveFinishedStatsRequest.class)));
    tmpMap.put(_Fields.FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("fetchBuildSlaveFinishedStatsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FetchBuildSlaveFinishedStatsRequest.class)));
    tmpMap.put(_Fields.SET_COORDINATOR_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("setCoordinatorRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SetCoordinatorRequest.class)));
    tmpMap.put(_Fields.ENQUEUE_MINIONS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("enqueueMinionsRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EnqueueMinionsRequest.class)));
    tmpMap.put(_Fields.SET_FINAL_BUILD_STATUS_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("setFinalBuildStatusRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SetFinalBuildStatusRequest.class)));
    tmpMap.put(_Fields.REPORT_COORDINATOR_ALIVE_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("reportCoordinatorAliveRequest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ReportCoordinatorAliveRequest.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FrontendRequest.class, metaDataMap);
  }

  public FrontendRequest() {
    this.type = com.facebook.buck.distributed.thrift.FrontendRequestType.UNKNOWN;

  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FrontendRequest(FrontendRequest other) {
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetStartBuildRequest()) {
      this.startBuildRequest = new StartBuildRequest(other.startBuildRequest);
    }
    if (other.isSetBuildStatusRequest()) {
      this.buildStatusRequest = new BuildStatusRequest(other.buildStatusRequest);
    }
    if (other.isSetLogRequest()) {
      this.logRequest = new LogRequest(other.logRequest);
    }
    if (other.isSetCasContainsRequest()) {
      this.casContainsRequest = new CASContainsRequest(other.casContainsRequest);
    }
    if (other.isSetCreateBuildRequest()) {
      this.createBuildRequest = new CreateBuildRequest(other.createBuildRequest);
    }
    if (other.isSetStoreLocalChangesRequest()) {
      this.storeLocalChangesRequest = new StoreLocalChangesRequest(other.storeLocalChangesRequest);
    }
    if (other.isSetFetchSourceFilesRequest()) {
      this.fetchSourceFilesRequest = new FetchSourceFilesRequest(other.fetchSourceFilesRequest);
    }
    if (other.isSetStoreBuildGraphRequest()) {
      this.storeBuildGraphRequest = new StoreBuildGraphRequest(other.storeBuildGraphRequest);
    }
    if (other.isSetFetchBuildGraphRequest()) {
      this.fetchBuildGraphRequest = new FetchBuildGraphRequest(other.fetchBuildGraphRequest);
    }
    if (other.isSetSetBuckVersionRequest()) {
      this.setBuckVersionRequest = new SetBuckVersionRequest(other.setBuckVersionRequest);
    }
    if (other.isSetAnnouncementRequest()) {
      this.announcementRequest = new AnnouncementRequest(other.announcementRequest);
    }
    if (other.isSetSetBuckDotFilePathsRequest()) {
      this.setBuckDotFilePathsRequest = new SetBuckDotFilePathsRequest(other.setBuckDotFilePathsRequest);
    }
    if (other.isSetMultiGetBuildSlaveLogDirRequest()) {
      this.multiGetBuildSlaveLogDirRequest = new MultiGetBuildSlaveLogDirRequest(other.multiGetBuildSlaveLogDirRequest);
    }
    if (other.isSetMultiGetBuildSlaveRealTimeLogsRequest()) {
      this.multiGetBuildSlaveRealTimeLogsRequest = new MultiGetBuildSlaveRealTimeLogsRequest(other.multiGetBuildSlaveRealTimeLogsRequest);
    }
    if (other.isSetUpdateBuildSlaveStatusRequest()) {
      this.updateBuildSlaveStatusRequest = new UpdateBuildSlaveStatusRequest(other.updateBuildSlaveStatusRequest);
    }
    if (other.isSetFetchBuildSlaveStatusRequest()) {
      this.fetchBuildSlaveStatusRequest = new FetchBuildSlaveStatusRequest(other.fetchBuildSlaveStatusRequest);
    }
    if (other.isSetAppendBuildSlaveEventsRequest()) {
      this.appendBuildSlaveEventsRequest = new AppendBuildSlaveEventsRequest(other.appendBuildSlaveEventsRequest);
    }
    if (other.isSetMultiGetBuildSlaveEventsRequest()) {
      this.multiGetBuildSlaveEventsRequest = new MultiGetBuildSlaveEventsRequest(other.multiGetBuildSlaveEventsRequest);
    }
    if (other.isSetFetchRuleKeyLogsRequest()) {
      this.fetchRuleKeyLogsRequest = new FetchRuleKeyLogsRequest(other.fetchRuleKeyLogsRequest);
    }
    if (other.isSetStoreBuildSlaveFinishedStatsRequest()) {
      this.storeBuildSlaveFinishedStatsRequest = new StoreBuildSlaveFinishedStatsRequest(other.storeBuildSlaveFinishedStatsRequest);
    }
    if (other.isSetFetchBuildSlaveFinishedStatsRequest()) {
      this.fetchBuildSlaveFinishedStatsRequest = new FetchBuildSlaveFinishedStatsRequest(other.fetchBuildSlaveFinishedStatsRequest);
    }
    if (other.isSetSetCoordinatorRequest()) {
      this.setCoordinatorRequest = new SetCoordinatorRequest(other.setCoordinatorRequest);
    }
    if (other.isSetEnqueueMinionsRequest()) {
      this.enqueueMinionsRequest = new EnqueueMinionsRequest(other.enqueueMinionsRequest);
    }
    if (other.isSetSetFinalBuildStatusRequest()) {
      this.setFinalBuildStatusRequest = new SetFinalBuildStatusRequest(other.setFinalBuildStatusRequest);
    }
    if (other.isSetReportCoordinatorAliveRequest()) {
      this.reportCoordinatorAliveRequest = new ReportCoordinatorAliveRequest(other.reportCoordinatorAliveRequest);
    }
  }

  public FrontendRequest deepCopy() {
    return new FrontendRequest(this);
  }

  @Override
  public void clear() {
    this.type = com.facebook.buck.distributed.thrift.FrontendRequestType.UNKNOWN;

    this.startBuildRequest = null;
    this.buildStatusRequest = null;
    this.logRequest = null;
    this.casContainsRequest = null;
    this.createBuildRequest = null;
    this.storeLocalChangesRequest = null;
    this.fetchSourceFilesRequest = null;
    this.storeBuildGraphRequest = null;
    this.fetchBuildGraphRequest = null;
    this.setBuckVersionRequest = null;
    this.announcementRequest = null;
    this.setBuckDotFilePathsRequest = null;
    this.multiGetBuildSlaveLogDirRequest = null;
    this.multiGetBuildSlaveRealTimeLogsRequest = null;
    this.updateBuildSlaveStatusRequest = null;
    this.fetchBuildSlaveStatusRequest = null;
    this.appendBuildSlaveEventsRequest = null;
    this.multiGetBuildSlaveEventsRequest = null;
    this.fetchRuleKeyLogsRequest = null;
    this.storeBuildSlaveFinishedStatsRequest = null;
    this.fetchBuildSlaveFinishedStatsRequest = null;
    this.setCoordinatorRequest = null;
    this.enqueueMinionsRequest = null;
    this.setFinalBuildStatusRequest = null;
    this.reportCoordinatorAliveRequest = null;
  }

  /**
   * 
   * @see FrontendRequestType
   */
  public FrontendRequestType getType() {
    return this.type;
  }

  /**
   * 
   * @see FrontendRequestType
   */
  public FrontendRequest setType(FrontendRequestType type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  public StartBuildRequest getStartBuildRequest() {
    return this.startBuildRequest;
  }

  public FrontendRequest setStartBuildRequest(StartBuildRequest startBuildRequest) {
    this.startBuildRequest = startBuildRequest;
    return this;
  }

  public void unsetStartBuildRequest() {
    this.startBuildRequest = null;
  }

  /** Returns true if field startBuildRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetStartBuildRequest() {
    return this.startBuildRequest != null;
  }

  public void setStartBuildRequestIsSet(boolean value) {
    if (!value) {
      this.startBuildRequest = null;
    }
  }

  public BuildStatusRequest getBuildStatusRequest() {
    return this.buildStatusRequest;
  }

  public FrontendRequest setBuildStatusRequest(BuildStatusRequest buildStatusRequest) {
    this.buildStatusRequest = buildStatusRequest;
    return this;
  }

  public void unsetBuildStatusRequest() {
    this.buildStatusRequest = null;
  }

  /** Returns true if field buildStatusRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetBuildStatusRequest() {
    return this.buildStatusRequest != null;
  }

  public void setBuildStatusRequestIsSet(boolean value) {
    if (!value) {
      this.buildStatusRequest = null;
    }
  }

  public LogRequest getLogRequest() {
    return this.logRequest;
  }

  public FrontendRequest setLogRequest(LogRequest logRequest) {
    this.logRequest = logRequest;
    return this;
  }

  public void unsetLogRequest() {
    this.logRequest = null;
  }

  /** Returns true if field logRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetLogRequest() {
    return this.logRequest != null;
  }

  public void setLogRequestIsSet(boolean value) {
    if (!value) {
      this.logRequest = null;
    }
  }

  public CASContainsRequest getCasContainsRequest() {
    return this.casContainsRequest;
  }

  public FrontendRequest setCasContainsRequest(CASContainsRequest casContainsRequest) {
    this.casContainsRequest = casContainsRequest;
    return this;
  }

  public void unsetCasContainsRequest() {
    this.casContainsRequest = null;
  }

  /** Returns true if field casContainsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetCasContainsRequest() {
    return this.casContainsRequest != null;
  }

  public void setCasContainsRequestIsSet(boolean value) {
    if (!value) {
      this.casContainsRequest = null;
    }
  }

  public CreateBuildRequest getCreateBuildRequest() {
    return this.createBuildRequest;
  }

  public FrontendRequest setCreateBuildRequest(CreateBuildRequest createBuildRequest) {
    this.createBuildRequest = createBuildRequest;
    return this;
  }

  public void unsetCreateBuildRequest() {
    this.createBuildRequest = null;
  }

  /** Returns true if field createBuildRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateBuildRequest() {
    return this.createBuildRequest != null;
  }

  public void setCreateBuildRequestIsSet(boolean value) {
    if (!value) {
      this.createBuildRequest = null;
    }
  }

  public StoreLocalChangesRequest getStoreLocalChangesRequest() {
    return this.storeLocalChangesRequest;
  }

  public FrontendRequest setStoreLocalChangesRequest(StoreLocalChangesRequest storeLocalChangesRequest) {
    this.storeLocalChangesRequest = storeLocalChangesRequest;
    return this;
  }

  public void unsetStoreLocalChangesRequest() {
    this.storeLocalChangesRequest = null;
  }

  /** Returns true if field storeLocalChangesRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetStoreLocalChangesRequest() {
    return this.storeLocalChangesRequest != null;
  }

  public void setStoreLocalChangesRequestIsSet(boolean value) {
    if (!value) {
      this.storeLocalChangesRequest = null;
    }
  }

  public FetchSourceFilesRequest getFetchSourceFilesRequest() {
    return this.fetchSourceFilesRequest;
  }

  public FrontendRequest setFetchSourceFilesRequest(FetchSourceFilesRequest fetchSourceFilesRequest) {
    this.fetchSourceFilesRequest = fetchSourceFilesRequest;
    return this;
  }

  public void unsetFetchSourceFilesRequest() {
    this.fetchSourceFilesRequest = null;
  }

  /** Returns true if field fetchSourceFilesRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetFetchSourceFilesRequest() {
    return this.fetchSourceFilesRequest != null;
  }

  public void setFetchSourceFilesRequestIsSet(boolean value) {
    if (!value) {
      this.fetchSourceFilesRequest = null;
    }
  }

  public StoreBuildGraphRequest getStoreBuildGraphRequest() {
    return this.storeBuildGraphRequest;
  }

  public FrontendRequest setStoreBuildGraphRequest(StoreBuildGraphRequest storeBuildGraphRequest) {
    this.storeBuildGraphRequest = storeBuildGraphRequest;
    return this;
  }

  public void unsetStoreBuildGraphRequest() {
    this.storeBuildGraphRequest = null;
  }

  /** Returns true if field storeBuildGraphRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetStoreBuildGraphRequest() {
    return this.storeBuildGraphRequest != null;
  }

  public void setStoreBuildGraphRequestIsSet(boolean value) {
    if (!value) {
      this.storeBuildGraphRequest = null;
    }
  }

  public FetchBuildGraphRequest getFetchBuildGraphRequest() {
    return this.fetchBuildGraphRequest;
  }

  public FrontendRequest setFetchBuildGraphRequest(FetchBuildGraphRequest fetchBuildGraphRequest) {
    this.fetchBuildGraphRequest = fetchBuildGraphRequest;
    return this;
  }

  public void unsetFetchBuildGraphRequest() {
    this.fetchBuildGraphRequest = null;
  }

  /** Returns true if field fetchBuildGraphRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetFetchBuildGraphRequest() {
    return this.fetchBuildGraphRequest != null;
  }

  public void setFetchBuildGraphRequestIsSet(boolean value) {
    if (!value) {
      this.fetchBuildGraphRequest = null;
    }
  }

  public SetBuckVersionRequest getSetBuckVersionRequest() {
    return this.setBuckVersionRequest;
  }

  public FrontendRequest setSetBuckVersionRequest(SetBuckVersionRequest setBuckVersionRequest) {
    this.setBuckVersionRequest = setBuckVersionRequest;
    return this;
  }

  public void unsetSetBuckVersionRequest() {
    this.setBuckVersionRequest = null;
  }

  /** Returns true if field setBuckVersionRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetSetBuckVersionRequest() {
    return this.setBuckVersionRequest != null;
  }

  public void setSetBuckVersionRequestIsSet(boolean value) {
    if (!value) {
      this.setBuckVersionRequest = null;
    }
  }

  public AnnouncementRequest getAnnouncementRequest() {
    return this.announcementRequest;
  }

  public FrontendRequest setAnnouncementRequest(AnnouncementRequest announcementRequest) {
    this.announcementRequest = announcementRequest;
    return this;
  }

  public void unsetAnnouncementRequest() {
    this.announcementRequest = null;
  }

  /** Returns true if field announcementRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetAnnouncementRequest() {
    return this.announcementRequest != null;
  }

  public void setAnnouncementRequestIsSet(boolean value) {
    if (!value) {
      this.announcementRequest = null;
    }
  }

  public SetBuckDotFilePathsRequest getSetBuckDotFilePathsRequest() {
    return this.setBuckDotFilePathsRequest;
  }

  public FrontendRequest setSetBuckDotFilePathsRequest(SetBuckDotFilePathsRequest setBuckDotFilePathsRequest) {
    this.setBuckDotFilePathsRequest = setBuckDotFilePathsRequest;
    return this;
  }

  public void unsetSetBuckDotFilePathsRequest() {
    this.setBuckDotFilePathsRequest = null;
  }

  /** Returns true if field setBuckDotFilePathsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetSetBuckDotFilePathsRequest() {
    return this.setBuckDotFilePathsRequest != null;
  }

  public void setSetBuckDotFilePathsRequestIsSet(boolean value) {
    if (!value) {
      this.setBuckDotFilePathsRequest = null;
    }
  }

  public MultiGetBuildSlaveLogDirRequest getMultiGetBuildSlaveLogDirRequest() {
    return this.multiGetBuildSlaveLogDirRequest;
  }

  public FrontendRequest setMultiGetBuildSlaveLogDirRequest(MultiGetBuildSlaveLogDirRequest multiGetBuildSlaveLogDirRequest) {
    this.multiGetBuildSlaveLogDirRequest = multiGetBuildSlaveLogDirRequest;
    return this;
  }

  public void unsetMultiGetBuildSlaveLogDirRequest() {
    this.multiGetBuildSlaveLogDirRequest = null;
  }

  /** Returns true if field multiGetBuildSlaveLogDirRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetMultiGetBuildSlaveLogDirRequest() {
    return this.multiGetBuildSlaveLogDirRequest != null;
  }

  public void setMultiGetBuildSlaveLogDirRequestIsSet(boolean value) {
    if (!value) {
      this.multiGetBuildSlaveLogDirRequest = null;
    }
  }

  public MultiGetBuildSlaveRealTimeLogsRequest getMultiGetBuildSlaveRealTimeLogsRequest() {
    return this.multiGetBuildSlaveRealTimeLogsRequest;
  }

  public FrontendRequest setMultiGetBuildSlaveRealTimeLogsRequest(MultiGetBuildSlaveRealTimeLogsRequest multiGetBuildSlaveRealTimeLogsRequest) {
    this.multiGetBuildSlaveRealTimeLogsRequest = multiGetBuildSlaveRealTimeLogsRequest;
    return this;
  }

  public void unsetMultiGetBuildSlaveRealTimeLogsRequest() {
    this.multiGetBuildSlaveRealTimeLogsRequest = null;
  }

  /** Returns true if field multiGetBuildSlaveRealTimeLogsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetMultiGetBuildSlaveRealTimeLogsRequest() {
    return this.multiGetBuildSlaveRealTimeLogsRequest != null;
  }

  public void setMultiGetBuildSlaveRealTimeLogsRequestIsSet(boolean value) {
    if (!value) {
      this.multiGetBuildSlaveRealTimeLogsRequest = null;
    }
  }

  public UpdateBuildSlaveStatusRequest getUpdateBuildSlaveStatusRequest() {
    return this.updateBuildSlaveStatusRequest;
  }

  public FrontendRequest setUpdateBuildSlaveStatusRequest(UpdateBuildSlaveStatusRequest updateBuildSlaveStatusRequest) {
    this.updateBuildSlaveStatusRequest = updateBuildSlaveStatusRequest;
    return this;
  }

  public void unsetUpdateBuildSlaveStatusRequest() {
    this.updateBuildSlaveStatusRequest = null;
  }

  /** Returns true if field updateBuildSlaveStatusRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateBuildSlaveStatusRequest() {
    return this.updateBuildSlaveStatusRequest != null;
  }

  public void setUpdateBuildSlaveStatusRequestIsSet(boolean value) {
    if (!value) {
      this.updateBuildSlaveStatusRequest = null;
    }
  }

  public FetchBuildSlaveStatusRequest getFetchBuildSlaveStatusRequest() {
    return this.fetchBuildSlaveStatusRequest;
  }

  public FrontendRequest setFetchBuildSlaveStatusRequest(FetchBuildSlaveStatusRequest fetchBuildSlaveStatusRequest) {
    this.fetchBuildSlaveStatusRequest = fetchBuildSlaveStatusRequest;
    return this;
  }

  public void unsetFetchBuildSlaveStatusRequest() {
    this.fetchBuildSlaveStatusRequest = null;
  }

  /** Returns true if field fetchBuildSlaveStatusRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetFetchBuildSlaveStatusRequest() {
    return this.fetchBuildSlaveStatusRequest != null;
  }

  public void setFetchBuildSlaveStatusRequestIsSet(boolean value) {
    if (!value) {
      this.fetchBuildSlaveStatusRequest = null;
    }
  }

  public AppendBuildSlaveEventsRequest getAppendBuildSlaveEventsRequest() {
    return this.appendBuildSlaveEventsRequest;
  }

  public FrontendRequest setAppendBuildSlaveEventsRequest(AppendBuildSlaveEventsRequest appendBuildSlaveEventsRequest) {
    this.appendBuildSlaveEventsRequest = appendBuildSlaveEventsRequest;
    return this;
  }

  public void unsetAppendBuildSlaveEventsRequest() {
    this.appendBuildSlaveEventsRequest = null;
  }

  /** Returns true if field appendBuildSlaveEventsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetAppendBuildSlaveEventsRequest() {
    return this.appendBuildSlaveEventsRequest != null;
  }

  public void setAppendBuildSlaveEventsRequestIsSet(boolean value) {
    if (!value) {
      this.appendBuildSlaveEventsRequest = null;
    }
  }

  public MultiGetBuildSlaveEventsRequest getMultiGetBuildSlaveEventsRequest() {
    return this.multiGetBuildSlaveEventsRequest;
  }

  public FrontendRequest setMultiGetBuildSlaveEventsRequest(MultiGetBuildSlaveEventsRequest multiGetBuildSlaveEventsRequest) {
    this.multiGetBuildSlaveEventsRequest = multiGetBuildSlaveEventsRequest;
    return this;
  }

  public void unsetMultiGetBuildSlaveEventsRequest() {
    this.multiGetBuildSlaveEventsRequest = null;
  }

  /** Returns true if field multiGetBuildSlaveEventsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetMultiGetBuildSlaveEventsRequest() {
    return this.multiGetBuildSlaveEventsRequest != null;
  }

  public void setMultiGetBuildSlaveEventsRequestIsSet(boolean value) {
    if (!value) {
      this.multiGetBuildSlaveEventsRequest = null;
    }
  }

  public FetchRuleKeyLogsRequest getFetchRuleKeyLogsRequest() {
    return this.fetchRuleKeyLogsRequest;
  }

  public FrontendRequest setFetchRuleKeyLogsRequest(FetchRuleKeyLogsRequest fetchRuleKeyLogsRequest) {
    this.fetchRuleKeyLogsRequest = fetchRuleKeyLogsRequest;
    return this;
  }

  public void unsetFetchRuleKeyLogsRequest() {
    this.fetchRuleKeyLogsRequest = null;
  }

  /** Returns true if field fetchRuleKeyLogsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetFetchRuleKeyLogsRequest() {
    return this.fetchRuleKeyLogsRequest != null;
  }

  public void setFetchRuleKeyLogsRequestIsSet(boolean value) {
    if (!value) {
      this.fetchRuleKeyLogsRequest = null;
    }
  }

  public StoreBuildSlaveFinishedStatsRequest getStoreBuildSlaveFinishedStatsRequest() {
    return this.storeBuildSlaveFinishedStatsRequest;
  }

  public FrontendRequest setStoreBuildSlaveFinishedStatsRequest(StoreBuildSlaveFinishedStatsRequest storeBuildSlaveFinishedStatsRequest) {
    this.storeBuildSlaveFinishedStatsRequest = storeBuildSlaveFinishedStatsRequest;
    return this;
  }

  public void unsetStoreBuildSlaveFinishedStatsRequest() {
    this.storeBuildSlaveFinishedStatsRequest = null;
  }

  /** Returns true if field storeBuildSlaveFinishedStatsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetStoreBuildSlaveFinishedStatsRequest() {
    return this.storeBuildSlaveFinishedStatsRequest != null;
  }

  public void setStoreBuildSlaveFinishedStatsRequestIsSet(boolean value) {
    if (!value) {
      this.storeBuildSlaveFinishedStatsRequest = null;
    }
  }

  public FetchBuildSlaveFinishedStatsRequest getFetchBuildSlaveFinishedStatsRequest() {
    return this.fetchBuildSlaveFinishedStatsRequest;
  }

  public FrontendRequest setFetchBuildSlaveFinishedStatsRequest(FetchBuildSlaveFinishedStatsRequest fetchBuildSlaveFinishedStatsRequest) {
    this.fetchBuildSlaveFinishedStatsRequest = fetchBuildSlaveFinishedStatsRequest;
    return this;
  }

  public void unsetFetchBuildSlaveFinishedStatsRequest() {
    this.fetchBuildSlaveFinishedStatsRequest = null;
  }

  /** Returns true if field fetchBuildSlaveFinishedStatsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetFetchBuildSlaveFinishedStatsRequest() {
    return this.fetchBuildSlaveFinishedStatsRequest != null;
  }

  public void setFetchBuildSlaveFinishedStatsRequestIsSet(boolean value) {
    if (!value) {
      this.fetchBuildSlaveFinishedStatsRequest = null;
    }
  }

  public SetCoordinatorRequest getSetCoordinatorRequest() {
    return this.setCoordinatorRequest;
  }

  public FrontendRequest setSetCoordinatorRequest(SetCoordinatorRequest setCoordinatorRequest) {
    this.setCoordinatorRequest = setCoordinatorRequest;
    return this;
  }

  public void unsetSetCoordinatorRequest() {
    this.setCoordinatorRequest = null;
  }

  /** Returns true if field setCoordinatorRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetSetCoordinatorRequest() {
    return this.setCoordinatorRequest != null;
  }

  public void setSetCoordinatorRequestIsSet(boolean value) {
    if (!value) {
      this.setCoordinatorRequest = null;
    }
  }

  public EnqueueMinionsRequest getEnqueueMinionsRequest() {
    return this.enqueueMinionsRequest;
  }

  public FrontendRequest setEnqueueMinionsRequest(EnqueueMinionsRequest enqueueMinionsRequest) {
    this.enqueueMinionsRequest = enqueueMinionsRequest;
    return this;
  }

  public void unsetEnqueueMinionsRequest() {
    this.enqueueMinionsRequest = null;
  }

  /** Returns true if field enqueueMinionsRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetEnqueueMinionsRequest() {
    return this.enqueueMinionsRequest != null;
  }

  public void setEnqueueMinionsRequestIsSet(boolean value) {
    if (!value) {
      this.enqueueMinionsRequest = null;
    }
  }

  public SetFinalBuildStatusRequest getSetFinalBuildStatusRequest() {
    return this.setFinalBuildStatusRequest;
  }

  public FrontendRequest setSetFinalBuildStatusRequest(SetFinalBuildStatusRequest setFinalBuildStatusRequest) {
    this.setFinalBuildStatusRequest = setFinalBuildStatusRequest;
    return this;
  }

  public void unsetSetFinalBuildStatusRequest() {
    this.setFinalBuildStatusRequest = null;
  }

  /** Returns true if field setFinalBuildStatusRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetSetFinalBuildStatusRequest() {
    return this.setFinalBuildStatusRequest != null;
  }

  public void setSetFinalBuildStatusRequestIsSet(boolean value) {
    if (!value) {
      this.setFinalBuildStatusRequest = null;
    }
  }

  public ReportCoordinatorAliveRequest getReportCoordinatorAliveRequest() {
    return this.reportCoordinatorAliveRequest;
  }

  public FrontendRequest setReportCoordinatorAliveRequest(ReportCoordinatorAliveRequest reportCoordinatorAliveRequest) {
    this.reportCoordinatorAliveRequest = reportCoordinatorAliveRequest;
    return this;
  }

  public void unsetReportCoordinatorAliveRequest() {
    this.reportCoordinatorAliveRequest = null;
  }

  /** Returns true if field reportCoordinatorAliveRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetReportCoordinatorAliveRequest() {
    return this.reportCoordinatorAliveRequest != null;
  }

  public void setReportCoordinatorAliveRequestIsSet(boolean value) {
    if (!value) {
      this.reportCoordinatorAliveRequest = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((FrontendRequestType)value);
      }
      break;

    case START_BUILD_REQUEST:
      if (value == null) {
        unsetStartBuildRequest();
      } else {
        setStartBuildRequest((StartBuildRequest)value);
      }
      break;

    case BUILD_STATUS_REQUEST:
      if (value == null) {
        unsetBuildStatusRequest();
      } else {
        setBuildStatusRequest((BuildStatusRequest)value);
      }
      break;

    case LOG_REQUEST:
      if (value == null) {
        unsetLogRequest();
      } else {
        setLogRequest((LogRequest)value);
      }
      break;

    case CAS_CONTAINS_REQUEST:
      if (value == null) {
        unsetCasContainsRequest();
      } else {
        setCasContainsRequest((CASContainsRequest)value);
      }
      break;

    case CREATE_BUILD_REQUEST:
      if (value == null) {
        unsetCreateBuildRequest();
      } else {
        setCreateBuildRequest((CreateBuildRequest)value);
      }
      break;

    case STORE_LOCAL_CHANGES_REQUEST:
      if (value == null) {
        unsetStoreLocalChangesRequest();
      } else {
        setStoreLocalChangesRequest((StoreLocalChangesRequest)value);
      }
      break;

    case FETCH_SOURCE_FILES_REQUEST:
      if (value == null) {
        unsetFetchSourceFilesRequest();
      } else {
        setFetchSourceFilesRequest((FetchSourceFilesRequest)value);
      }
      break;

    case STORE_BUILD_GRAPH_REQUEST:
      if (value == null) {
        unsetStoreBuildGraphRequest();
      } else {
        setStoreBuildGraphRequest((StoreBuildGraphRequest)value);
      }
      break;

    case FETCH_BUILD_GRAPH_REQUEST:
      if (value == null) {
        unsetFetchBuildGraphRequest();
      } else {
        setFetchBuildGraphRequest((FetchBuildGraphRequest)value);
      }
      break;

    case SET_BUCK_VERSION_REQUEST:
      if (value == null) {
        unsetSetBuckVersionRequest();
      } else {
        setSetBuckVersionRequest((SetBuckVersionRequest)value);
      }
      break;

    case ANNOUNCEMENT_REQUEST:
      if (value == null) {
        unsetAnnouncementRequest();
      } else {
        setAnnouncementRequest((AnnouncementRequest)value);
      }
      break;

    case SET_BUCK_DOT_FILE_PATHS_REQUEST:
      if (value == null) {
        unsetSetBuckDotFilePathsRequest();
      } else {
        setSetBuckDotFilePathsRequest((SetBuckDotFilePathsRequest)value);
      }
      break;

    case MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST:
      if (value == null) {
        unsetMultiGetBuildSlaveLogDirRequest();
      } else {
        setMultiGetBuildSlaveLogDirRequest((MultiGetBuildSlaveLogDirRequest)value);
      }
      break;

    case MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST:
      if (value == null) {
        unsetMultiGetBuildSlaveRealTimeLogsRequest();
      } else {
        setMultiGetBuildSlaveRealTimeLogsRequest((MultiGetBuildSlaveRealTimeLogsRequest)value);
      }
      break;

    case UPDATE_BUILD_SLAVE_STATUS_REQUEST:
      if (value == null) {
        unsetUpdateBuildSlaveStatusRequest();
      } else {
        setUpdateBuildSlaveStatusRequest((UpdateBuildSlaveStatusRequest)value);
      }
      break;

    case FETCH_BUILD_SLAVE_STATUS_REQUEST:
      if (value == null) {
        unsetFetchBuildSlaveStatusRequest();
      } else {
        setFetchBuildSlaveStatusRequest((FetchBuildSlaveStatusRequest)value);
      }
      break;

    case APPEND_BUILD_SLAVE_EVENTS_REQUEST:
      if (value == null) {
        unsetAppendBuildSlaveEventsRequest();
      } else {
        setAppendBuildSlaveEventsRequest((AppendBuildSlaveEventsRequest)value);
      }
      break;

    case MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST:
      if (value == null) {
        unsetMultiGetBuildSlaveEventsRequest();
      } else {
        setMultiGetBuildSlaveEventsRequest((MultiGetBuildSlaveEventsRequest)value);
      }
      break;

    case FETCH_RULE_KEY_LOGS_REQUEST:
      if (value == null) {
        unsetFetchRuleKeyLogsRequest();
      } else {
        setFetchRuleKeyLogsRequest((FetchRuleKeyLogsRequest)value);
      }
      break;

    case STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST:
      if (value == null) {
        unsetStoreBuildSlaveFinishedStatsRequest();
      } else {
        setStoreBuildSlaveFinishedStatsRequest((StoreBuildSlaveFinishedStatsRequest)value);
      }
      break;

    case FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST:
      if (value == null) {
        unsetFetchBuildSlaveFinishedStatsRequest();
      } else {
        setFetchBuildSlaveFinishedStatsRequest((FetchBuildSlaveFinishedStatsRequest)value);
      }
      break;

    case SET_COORDINATOR_REQUEST:
      if (value == null) {
        unsetSetCoordinatorRequest();
      } else {
        setSetCoordinatorRequest((SetCoordinatorRequest)value);
      }
      break;

    case ENQUEUE_MINIONS_REQUEST:
      if (value == null) {
        unsetEnqueueMinionsRequest();
      } else {
        setEnqueueMinionsRequest((EnqueueMinionsRequest)value);
      }
      break;

    case SET_FINAL_BUILD_STATUS_REQUEST:
      if (value == null) {
        unsetSetFinalBuildStatusRequest();
      } else {
        setSetFinalBuildStatusRequest((SetFinalBuildStatusRequest)value);
      }
      break;

    case REPORT_COORDINATOR_ALIVE_REQUEST:
      if (value == null) {
        unsetReportCoordinatorAliveRequest();
      } else {
        setReportCoordinatorAliveRequest((ReportCoordinatorAliveRequest)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TYPE:
      return getType();

    case START_BUILD_REQUEST:
      return getStartBuildRequest();

    case BUILD_STATUS_REQUEST:
      return getBuildStatusRequest();

    case LOG_REQUEST:
      return getLogRequest();

    case CAS_CONTAINS_REQUEST:
      return getCasContainsRequest();

    case CREATE_BUILD_REQUEST:
      return getCreateBuildRequest();

    case STORE_LOCAL_CHANGES_REQUEST:
      return getStoreLocalChangesRequest();

    case FETCH_SOURCE_FILES_REQUEST:
      return getFetchSourceFilesRequest();

    case STORE_BUILD_GRAPH_REQUEST:
      return getStoreBuildGraphRequest();

    case FETCH_BUILD_GRAPH_REQUEST:
      return getFetchBuildGraphRequest();

    case SET_BUCK_VERSION_REQUEST:
      return getSetBuckVersionRequest();

    case ANNOUNCEMENT_REQUEST:
      return getAnnouncementRequest();

    case SET_BUCK_DOT_FILE_PATHS_REQUEST:
      return getSetBuckDotFilePathsRequest();

    case MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST:
      return getMultiGetBuildSlaveLogDirRequest();

    case MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST:
      return getMultiGetBuildSlaveRealTimeLogsRequest();

    case UPDATE_BUILD_SLAVE_STATUS_REQUEST:
      return getUpdateBuildSlaveStatusRequest();

    case FETCH_BUILD_SLAVE_STATUS_REQUEST:
      return getFetchBuildSlaveStatusRequest();

    case APPEND_BUILD_SLAVE_EVENTS_REQUEST:
      return getAppendBuildSlaveEventsRequest();

    case MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST:
      return getMultiGetBuildSlaveEventsRequest();

    case FETCH_RULE_KEY_LOGS_REQUEST:
      return getFetchRuleKeyLogsRequest();

    case STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST:
      return getStoreBuildSlaveFinishedStatsRequest();

    case FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST:
      return getFetchBuildSlaveFinishedStatsRequest();

    case SET_COORDINATOR_REQUEST:
      return getSetCoordinatorRequest();

    case ENQUEUE_MINIONS_REQUEST:
      return getEnqueueMinionsRequest();

    case SET_FINAL_BUILD_STATUS_REQUEST:
      return getSetFinalBuildStatusRequest();

    case REPORT_COORDINATOR_ALIVE_REQUEST:
      return getReportCoordinatorAliveRequest();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TYPE:
      return isSetType();
    case START_BUILD_REQUEST:
      return isSetStartBuildRequest();
    case BUILD_STATUS_REQUEST:
      return isSetBuildStatusRequest();
    case LOG_REQUEST:
      return isSetLogRequest();
    case CAS_CONTAINS_REQUEST:
      return isSetCasContainsRequest();
    case CREATE_BUILD_REQUEST:
      return isSetCreateBuildRequest();
    case STORE_LOCAL_CHANGES_REQUEST:
      return isSetStoreLocalChangesRequest();
    case FETCH_SOURCE_FILES_REQUEST:
      return isSetFetchSourceFilesRequest();
    case STORE_BUILD_GRAPH_REQUEST:
      return isSetStoreBuildGraphRequest();
    case FETCH_BUILD_GRAPH_REQUEST:
      return isSetFetchBuildGraphRequest();
    case SET_BUCK_VERSION_REQUEST:
      return isSetSetBuckVersionRequest();
    case ANNOUNCEMENT_REQUEST:
      return isSetAnnouncementRequest();
    case SET_BUCK_DOT_FILE_PATHS_REQUEST:
      return isSetSetBuckDotFilePathsRequest();
    case MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST:
      return isSetMultiGetBuildSlaveLogDirRequest();
    case MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST:
      return isSetMultiGetBuildSlaveRealTimeLogsRequest();
    case UPDATE_BUILD_SLAVE_STATUS_REQUEST:
      return isSetUpdateBuildSlaveStatusRequest();
    case FETCH_BUILD_SLAVE_STATUS_REQUEST:
      return isSetFetchBuildSlaveStatusRequest();
    case APPEND_BUILD_SLAVE_EVENTS_REQUEST:
      return isSetAppendBuildSlaveEventsRequest();
    case MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST:
      return isSetMultiGetBuildSlaveEventsRequest();
    case FETCH_RULE_KEY_LOGS_REQUEST:
      return isSetFetchRuleKeyLogsRequest();
    case STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST:
      return isSetStoreBuildSlaveFinishedStatsRequest();
    case FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST:
      return isSetFetchBuildSlaveFinishedStatsRequest();
    case SET_COORDINATOR_REQUEST:
      return isSetSetCoordinatorRequest();
    case ENQUEUE_MINIONS_REQUEST:
      return isSetEnqueueMinionsRequest();
    case SET_FINAL_BUILD_STATUS_REQUEST:
      return isSetSetFinalBuildStatusRequest();
    case REPORT_COORDINATOR_ALIVE_REQUEST:
      return isSetReportCoordinatorAliveRequest();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof FrontendRequest)
      return this.equals((FrontendRequest)that);
    return false;
  }

  public boolean equals(FrontendRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_startBuildRequest = true && this.isSetStartBuildRequest();
    boolean that_present_startBuildRequest = true && that.isSetStartBuildRequest();
    if (this_present_startBuildRequest || that_present_startBuildRequest) {
      if (!(this_present_startBuildRequest && that_present_startBuildRequest))
        return false;
      if (!this.startBuildRequest.equals(that.startBuildRequest))
        return false;
    }

    boolean this_present_buildStatusRequest = true && this.isSetBuildStatusRequest();
    boolean that_present_buildStatusRequest = true && that.isSetBuildStatusRequest();
    if (this_present_buildStatusRequest || that_present_buildStatusRequest) {
      if (!(this_present_buildStatusRequest && that_present_buildStatusRequest))
        return false;
      if (!this.buildStatusRequest.equals(that.buildStatusRequest))
        return false;
    }

    boolean this_present_logRequest = true && this.isSetLogRequest();
    boolean that_present_logRequest = true && that.isSetLogRequest();
    if (this_present_logRequest || that_present_logRequest) {
      if (!(this_present_logRequest && that_present_logRequest))
        return false;
      if (!this.logRequest.equals(that.logRequest))
        return false;
    }

    boolean this_present_casContainsRequest = true && this.isSetCasContainsRequest();
    boolean that_present_casContainsRequest = true && that.isSetCasContainsRequest();
    if (this_present_casContainsRequest || that_present_casContainsRequest) {
      if (!(this_present_casContainsRequest && that_present_casContainsRequest))
        return false;
      if (!this.casContainsRequest.equals(that.casContainsRequest))
        return false;
    }

    boolean this_present_createBuildRequest = true && this.isSetCreateBuildRequest();
    boolean that_present_createBuildRequest = true && that.isSetCreateBuildRequest();
    if (this_present_createBuildRequest || that_present_createBuildRequest) {
      if (!(this_present_createBuildRequest && that_present_createBuildRequest))
        return false;
      if (!this.createBuildRequest.equals(that.createBuildRequest))
        return false;
    }

    boolean this_present_storeLocalChangesRequest = true && this.isSetStoreLocalChangesRequest();
    boolean that_present_storeLocalChangesRequest = true && that.isSetStoreLocalChangesRequest();
    if (this_present_storeLocalChangesRequest || that_present_storeLocalChangesRequest) {
      if (!(this_present_storeLocalChangesRequest && that_present_storeLocalChangesRequest))
        return false;
      if (!this.storeLocalChangesRequest.equals(that.storeLocalChangesRequest))
        return false;
    }

    boolean this_present_fetchSourceFilesRequest = true && this.isSetFetchSourceFilesRequest();
    boolean that_present_fetchSourceFilesRequest = true && that.isSetFetchSourceFilesRequest();
    if (this_present_fetchSourceFilesRequest || that_present_fetchSourceFilesRequest) {
      if (!(this_present_fetchSourceFilesRequest && that_present_fetchSourceFilesRequest))
        return false;
      if (!this.fetchSourceFilesRequest.equals(that.fetchSourceFilesRequest))
        return false;
    }

    boolean this_present_storeBuildGraphRequest = true && this.isSetStoreBuildGraphRequest();
    boolean that_present_storeBuildGraphRequest = true && that.isSetStoreBuildGraphRequest();
    if (this_present_storeBuildGraphRequest || that_present_storeBuildGraphRequest) {
      if (!(this_present_storeBuildGraphRequest && that_present_storeBuildGraphRequest))
        return false;
      if (!this.storeBuildGraphRequest.equals(that.storeBuildGraphRequest))
        return false;
    }

    boolean this_present_fetchBuildGraphRequest = true && this.isSetFetchBuildGraphRequest();
    boolean that_present_fetchBuildGraphRequest = true && that.isSetFetchBuildGraphRequest();
    if (this_present_fetchBuildGraphRequest || that_present_fetchBuildGraphRequest) {
      if (!(this_present_fetchBuildGraphRequest && that_present_fetchBuildGraphRequest))
        return false;
      if (!this.fetchBuildGraphRequest.equals(that.fetchBuildGraphRequest))
        return false;
    }

    boolean this_present_setBuckVersionRequest = true && this.isSetSetBuckVersionRequest();
    boolean that_present_setBuckVersionRequest = true && that.isSetSetBuckVersionRequest();
    if (this_present_setBuckVersionRequest || that_present_setBuckVersionRequest) {
      if (!(this_present_setBuckVersionRequest && that_present_setBuckVersionRequest))
        return false;
      if (!this.setBuckVersionRequest.equals(that.setBuckVersionRequest))
        return false;
    }

    boolean this_present_announcementRequest = true && this.isSetAnnouncementRequest();
    boolean that_present_announcementRequest = true && that.isSetAnnouncementRequest();
    if (this_present_announcementRequest || that_present_announcementRequest) {
      if (!(this_present_announcementRequest && that_present_announcementRequest))
        return false;
      if (!this.announcementRequest.equals(that.announcementRequest))
        return false;
    }

    boolean this_present_setBuckDotFilePathsRequest = true && this.isSetSetBuckDotFilePathsRequest();
    boolean that_present_setBuckDotFilePathsRequest = true && that.isSetSetBuckDotFilePathsRequest();
    if (this_present_setBuckDotFilePathsRequest || that_present_setBuckDotFilePathsRequest) {
      if (!(this_present_setBuckDotFilePathsRequest && that_present_setBuckDotFilePathsRequest))
        return false;
      if (!this.setBuckDotFilePathsRequest.equals(that.setBuckDotFilePathsRequest))
        return false;
    }

    boolean this_present_multiGetBuildSlaveLogDirRequest = true && this.isSetMultiGetBuildSlaveLogDirRequest();
    boolean that_present_multiGetBuildSlaveLogDirRequest = true && that.isSetMultiGetBuildSlaveLogDirRequest();
    if (this_present_multiGetBuildSlaveLogDirRequest || that_present_multiGetBuildSlaveLogDirRequest) {
      if (!(this_present_multiGetBuildSlaveLogDirRequest && that_present_multiGetBuildSlaveLogDirRequest))
        return false;
      if (!this.multiGetBuildSlaveLogDirRequest.equals(that.multiGetBuildSlaveLogDirRequest))
        return false;
    }

    boolean this_present_multiGetBuildSlaveRealTimeLogsRequest = true && this.isSetMultiGetBuildSlaveRealTimeLogsRequest();
    boolean that_present_multiGetBuildSlaveRealTimeLogsRequest = true && that.isSetMultiGetBuildSlaveRealTimeLogsRequest();
    if (this_present_multiGetBuildSlaveRealTimeLogsRequest || that_present_multiGetBuildSlaveRealTimeLogsRequest) {
      if (!(this_present_multiGetBuildSlaveRealTimeLogsRequest && that_present_multiGetBuildSlaveRealTimeLogsRequest))
        return false;
      if (!this.multiGetBuildSlaveRealTimeLogsRequest.equals(that.multiGetBuildSlaveRealTimeLogsRequest))
        return false;
    }

    boolean this_present_updateBuildSlaveStatusRequest = true && this.isSetUpdateBuildSlaveStatusRequest();
    boolean that_present_updateBuildSlaveStatusRequest = true && that.isSetUpdateBuildSlaveStatusRequest();
    if (this_present_updateBuildSlaveStatusRequest || that_present_updateBuildSlaveStatusRequest) {
      if (!(this_present_updateBuildSlaveStatusRequest && that_present_updateBuildSlaveStatusRequest))
        return false;
      if (!this.updateBuildSlaveStatusRequest.equals(that.updateBuildSlaveStatusRequest))
        return false;
    }

    boolean this_present_fetchBuildSlaveStatusRequest = true && this.isSetFetchBuildSlaveStatusRequest();
    boolean that_present_fetchBuildSlaveStatusRequest = true && that.isSetFetchBuildSlaveStatusRequest();
    if (this_present_fetchBuildSlaveStatusRequest || that_present_fetchBuildSlaveStatusRequest) {
      if (!(this_present_fetchBuildSlaveStatusRequest && that_present_fetchBuildSlaveStatusRequest))
        return false;
      if (!this.fetchBuildSlaveStatusRequest.equals(that.fetchBuildSlaveStatusRequest))
        return false;
    }

    boolean this_present_appendBuildSlaveEventsRequest = true && this.isSetAppendBuildSlaveEventsRequest();
    boolean that_present_appendBuildSlaveEventsRequest = true && that.isSetAppendBuildSlaveEventsRequest();
    if (this_present_appendBuildSlaveEventsRequest || that_present_appendBuildSlaveEventsRequest) {
      if (!(this_present_appendBuildSlaveEventsRequest && that_present_appendBuildSlaveEventsRequest))
        return false;
      if (!this.appendBuildSlaveEventsRequest.equals(that.appendBuildSlaveEventsRequest))
        return false;
    }

    boolean this_present_multiGetBuildSlaveEventsRequest = true && this.isSetMultiGetBuildSlaveEventsRequest();
    boolean that_present_multiGetBuildSlaveEventsRequest = true && that.isSetMultiGetBuildSlaveEventsRequest();
    if (this_present_multiGetBuildSlaveEventsRequest || that_present_multiGetBuildSlaveEventsRequest) {
      if (!(this_present_multiGetBuildSlaveEventsRequest && that_present_multiGetBuildSlaveEventsRequest))
        return false;
      if (!this.multiGetBuildSlaveEventsRequest.equals(that.multiGetBuildSlaveEventsRequest))
        return false;
    }

    boolean this_present_fetchRuleKeyLogsRequest = true && this.isSetFetchRuleKeyLogsRequest();
    boolean that_present_fetchRuleKeyLogsRequest = true && that.isSetFetchRuleKeyLogsRequest();
    if (this_present_fetchRuleKeyLogsRequest || that_present_fetchRuleKeyLogsRequest) {
      if (!(this_present_fetchRuleKeyLogsRequest && that_present_fetchRuleKeyLogsRequest))
        return false;
      if (!this.fetchRuleKeyLogsRequest.equals(that.fetchRuleKeyLogsRequest))
        return false;
    }

    boolean this_present_storeBuildSlaveFinishedStatsRequest = true && this.isSetStoreBuildSlaveFinishedStatsRequest();
    boolean that_present_storeBuildSlaveFinishedStatsRequest = true && that.isSetStoreBuildSlaveFinishedStatsRequest();
    if (this_present_storeBuildSlaveFinishedStatsRequest || that_present_storeBuildSlaveFinishedStatsRequest) {
      if (!(this_present_storeBuildSlaveFinishedStatsRequest && that_present_storeBuildSlaveFinishedStatsRequest))
        return false;
      if (!this.storeBuildSlaveFinishedStatsRequest.equals(that.storeBuildSlaveFinishedStatsRequest))
        return false;
    }

    boolean this_present_fetchBuildSlaveFinishedStatsRequest = true && this.isSetFetchBuildSlaveFinishedStatsRequest();
    boolean that_present_fetchBuildSlaveFinishedStatsRequest = true && that.isSetFetchBuildSlaveFinishedStatsRequest();
    if (this_present_fetchBuildSlaveFinishedStatsRequest || that_present_fetchBuildSlaveFinishedStatsRequest) {
      if (!(this_present_fetchBuildSlaveFinishedStatsRequest && that_present_fetchBuildSlaveFinishedStatsRequest))
        return false;
      if (!this.fetchBuildSlaveFinishedStatsRequest.equals(that.fetchBuildSlaveFinishedStatsRequest))
        return false;
    }

    boolean this_present_setCoordinatorRequest = true && this.isSetSetCoordinatorRequest();
    boolean that_present_setCoordinatorRequest = true && that.isSetSetCoordinatorRequest();
    if (this_present_setCoordinatorRequest || that_present_setCoordinatorRequest) {
      if (!(this_present_setCoordinatorRequest && that_present_setCoordinatorRequest))
        return false;
      if (!this.setCoordinatorRequest.equals(that.setCoordinatorRequest))
        return false;
    }

    boolean this_present_enqueueMinionsRequest = true && this.isSetEnqueueMinionsRequest();
    boolean that_present_enqueueMinionsRequest = true && that.isSetEnqueueMinionsRequest();
    if (this_present_enqueueMinionsRequest || that_present_enqueueMinionsRequest) {
      if (!(this_present_enqueueMinionsRequest && that_present_enqueueMinionsRequest))
        return false;
      if (!this.enqueueMinionsRequest.equals(that.enqueueMinionsRequest))
        return false;
    }

    boolean this_present_setFinalBuildStatusRequest = true && this.isSetSetFinalBuildStatusRequest();
    boolean that_present_setFinalBuildStatusRequest = true && that.isSetSetFinalBuildStatusRequest();
    if (this_present_setFinalBuildStatusRequest || that_present_setFinalBuildStatusRequest) {
      if (!(this_present_setFinalBuildStatusRequest && that_present_setFinalBuildStatusRequest))
        return false;
      if (!this.setFinalBuildStatusRequest.equals(that.setFinalBuildStatusRequest))
        return false;
    }

    boolean this_present_reportCoordinatorAliveRequest = true && this.isSetReportCoordinatorAliveRequest();
    boolean that_present_reportCoordinatorAliveRequest = true && that.isSetReportCoordinatorAliveRequest();
    if (this_present_reportCoordinatorAliveRequest || that_present_reportCoordinatorAliveRequest) {
      if (!(this_present_reportCoordinatorAliveRequest && that_present_reportCoordinatorAliveRequest))
        return false;
      if (!this.reportCoordinatorAliveRequest.equals(that.reportCoordinatorAliveRequest))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type.getValue();

    hashCode = hashCode * 8191 + ((isSetStartBuildRequest()) ? 131071 : 524287);
    if (isSetStartBuildRequest())
      hashCode = hashCode * 8191 + startBuildRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetBuildStatusRequest()) ? 131071 : 524287);
    if (isSetBuildStatusRequest())
      hashCode = hashCode * 8191 + buildStatusRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetLogRequest()) ? 131071 : 524287);
    if (isSetLogRequest())
      hashCode = hashCode * 8191 + logRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetCasContainsRequest()) ? 131071 : 524287);
    if (isSetCasContainsRequest())
      hashCode = hashCode * 8191 + casContainsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateBuildRequest()) ? 131071 : 524287);
    if (isSetCreateBuildRequest())
      hashCode = hashCode * 8191 + createBuildRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetStoreLocalChangesRequest()) ? 131071 : 524287);
    if (isSetStoreLocalChangesRequest())
      hashCode = hashCode * 8191 + storeLocalChangesRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetFetchSourceFilesRequest()) ? 131071 : 524287);
    if (isSetFetchSourceFilesRequest())
      hashCode = hashCode * 8191 + fetchSourceFilesRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetStoreBuildGraphRequest()) ? 131071 : 524287);
    if (isSetStoreBuildGraphRequest())
      hashCode = hashCode * 8191 + storeBuildGraphRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetFetchBuildGraphRequest()) ? 131071 : 524287);
    if (isSetFetchBuildGraphRequest())
      hashCode = hashCode * 8191 + fetchBuildGraphRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetSetBuckVersionRequest()) ? 131071 : 524287);
    if (isSetSetBuckVersionRequest())
      hashCode = hashCode * 8191 + setBuckVersionRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetAnnouncementRequest()) ? 131071 : 524287);
    if (isSetAnnouncementRequest())
      hashCode = hashCode * 8191 + announcementRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetSetBuckDotFilePathsRequest()) ? 131071 : 524287);
    if (isSetSetBuckDotFilePathsRequest())
      hashCode = hashCode * 8191 + setBuckDotFilePathsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetMultiGetBuildSlaveLogDirRequest()) ? 131071 : 524287);
    if (isSetMultiGetBuildSlaveLogDirRequest())
      hashCode = hashCode * 8191 + multiGetBuildSlaveLogDirRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetMultiGetBuildSlaveRealTimeLogsRequest()) ? 131071 : 524287);
    if (isSetMultiGetBuildSlaveRealTimeLogsRequest())
      hashCode = hashCode * 8191 + multiGetBuildSlaveRealTimeLogsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateBuildSlaveStatusRequest()) ? 131071 : 524287);
    if (isSetUpdateBuildSlaveStatusRequest())
      hashCode = hashCode * 8191 + updateBuildSlaveStatusRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetFetchBuildSlaveStatusRequest()) ? 131071 : 524287);
    if (isSetFetchBuildSlaveStatusRequest())
      hashCode = hashCode * 8191 + fetchBuildSlaveStatusRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetAppendBuildSlaveEventsRequest()) ? 131071 : 524287);
    if (isSetAppendBuildSlaveEventsRequest())
      hashCode = hashCode * 8191 + appendBuildSlaveEventsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetMultiGetBuildSlaveEventsRequest()) ? 131071 : 524287);
    if (isSetMultiGetBuildSlaveEventsRequest())
      hashCode = hashCode * 8191 + multiGetBuildSlaveEventsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetFetchRuleKeyLogsRequest()) ? 131071 : 524287);
    if (isSetFetchRuleKeyLogsRequest())
      hashCode = hashCode * 8191 + fetchRuleKeyLogsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetStoreBuildSlaveFinishedStatsRequest()) ? 131071 : 524287);
    if (isSetStoreBuildSlaveFinishedStatsRequest())
      hashCode = hashCode * 8191 + storeBuildSlaveFinishedStatsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetFetchBuildSlaveFinishedStatsRequest()) ? 131071 : 524287);
    if (isSetFetchBuildSlaveFinishedStatsRequest())
      hashCode = hashCode * 8191 + fetchBuildSlaveFinishedStatsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetSetCoordinatorRequest()) ? 131071 : 524287);
    if (isSetSetCoordinatorRequest())
      hashCode = hashCode * 8191 + setCoordinatorRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetEnqueueMinionsRequest()) ? 131071 : 524287);
    if (isSetEnqueueMinionsRequest())
      hashCode = hashCode * 8191 + enqueueMinionsRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetSetFinalBuildStatusRequest()) ? 131071 : 524287);
    if (isSetSetFinalBuildStatusRequest())
      hashCode = hashCode * 8191 + setFinalBuildStatusRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetReportCoordinatorAliveRequest()) ? 131071 : 524287);
    if (isSetReportCoordinatorAliveRequest())
      hashCode = hashCode * 8191 + reportCoordinatorAliveRequest.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(FrontendRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartBuildRequest()).compareTo(other.isSetStartBuildRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartBuildRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startBuildRequest, other.startBuildRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBuildStatusRequest()).compareTo(other.isSetBuildStatusRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuildStatusRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buildStatusRequest, other.buildStatusRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLogRequest()).compareTo(other.isSetLogRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.logRequest, other.logRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCasContainsRequest()).compareTo(other.isSetCasContainsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCasContainsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.casContainsRequest, other.casContainsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateBuildRequest()).compareTo(other.isSetCreateBuildRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateBuildRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createBuildRequest, other.createBuildRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStoreLocalChangesRequest()).compareTo(other.isSetStoreLocalChangesRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreLocalChangesRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storeLocalChangesRequest, other.storeLocalChangesRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFetchSourceFilesRequest()).compareTo(other.isSetFetchSourceFilesRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFetchSourceFilesRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fetchSourceFilesRequest, other.fetchSourceFilesRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStoreBuildGraphRequest()).compareTo(other.isSetStoreBuildGraphRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreBuildGraphRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storeBuildGraphRequest, other.storeBuildGraphRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFetchBuildGraphRequest()).compareTo(other.isSetFetchBuildGraphRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFetchBuildGraphRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fetchBuildGraphRequest, other.fetchBuildGraphRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSetBuckVersionRequest()).compareTo(other.isSetSetBuckVersionRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSetBuckVersionRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.setBuckVersionRequest, other.setBuckVersionRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAnnouncementRequest()).compareTo(other.isSetAnnouncementRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnnouncementRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.announcementRequest, other.announcementRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSetBuckDotFilePathsRequest()).compareTo(other.isSetSetBuckDotFilePathsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSetBuckDotFilePathsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.setBuckDotFilePathsRequest, other.setBuckDotFilePathsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMultiGetBuildSlaveLogDirRequest()).compareTo(other.isSetMultiGetBuildSlaveLogDirRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMultiGetBuildSlaveLogDirRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.multiGetBuildSlaveLogDirRequest, other.multiGetBuildSlaveLogDirRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMultiGetBuildSlaveRealTimeLogsRequest()).compareTo(other.isSetMultiGetBuildSlaveRealTimeLogsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMultiGetBuildSlaveRealTimeLogsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.multiGetBuildSlaveRealTimeLogsRequest, other.multiGetBuildSlaveRealTimeLogsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdateBuildSlaveStatusRequest()).compareTo(other.isSetUpdateBuildSlaveStatusRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateBuildSlaveStatusRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateBuildSlaveStatusRequest, other.updateBuildSlaveStatusRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFetchBuildSlaveStatusRequest()).compareTo(other.isSetFetchBuildSlaveStatusRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFetchBuildSlaveStatusRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fetchBuildSlaveStatusRequest, other.fetchBuildSlaveStatusRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAppendBuildSlaveEventsRequest()).compareTo(other.isSetAppendBuildSlaveEventsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppendBuildSlaveEventsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appendBuildSlaveEventsRequest, other.appendBuildSlaveEventsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMultiGetBuildSlaveEventsRequest()).compareTo(other.isSetMultiGetBuildSlaveEventsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMultiGetBuildSlaveEventsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.multiGetBuildSlaveEventsRequest, other.multiGetBuildSlaveEventsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFetchRuleKeyLogsRequest()).compareTo(other.isSetFetchRuleKeyLogsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFetchRuleKeyLogsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fetchRuleKeyLogsRequest, other.fetchRuleKeyLogsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStoreBuildSlaveFinishedStatsRequest()).compareTo(other.isSetStoreBuildSlaveFinishedStatsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreBuildSlaveFinishedStatsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storeBuildSlaveFinishedStatsRequest, other.storeBuildSlaveFinishedStatsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFetchBuildSlaveFinishedStatsRequest()).compareTo(other.isSetFetchBuildSlaveFinishedStatsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFetchBuildSlaveFinishedStatsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fetchBuildSlaveFinishedStatsRequest, other.fetchBuildSlaveFinishedStatsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSetCoordinatorRequest()).compareTo(other.isSetSetCoordinatorRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSetCoordinatorRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.setCoordinatorRequest, other.setCoordinatorRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEnqueueMinionsRequest()).compareTo(other.isSetEnqueueMinionsRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnqueueMinionsRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enqueueMinionsRequest, other.enqueueMinionsRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSetFinalBuildStatusRequest()).compareTo(other.isSetSetFinalBuildStatusRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSetFinalBuildStatusRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.setFinalBuildStatusRequest, other.setFinalBuildStatusRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReportCoordinatorAliveRequest()).compareTo(other.isSetReportCoordinatorAliveRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReportCoordinatorAliveRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reportCoordinatorAliveRequest, other.reportCoordinatorAliveRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("FrontendRequest(");
    boolean first = true;

    if (isSetType()) {
      sb.append("type:");
      if (this.type == null) {
        sb.append("null");
      } else {
        sb.append(this.type);
      }
      first = false;
    }
    if (isSetStartBuildRequest()) {
      if (!first) sb.append(", ");
      sb.append("startBuildRequest:");
      if (this.startBuildRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.startBuildRequest);
      }
      first = false;
    }
    if (isSetBuildStatusRequest()) {
      if (!first) sb.append(", ");
      sb.append("buildStatusRequest:");
      if (this.buildStatusRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.buildStatusRequest);
      }
      first = false;
    }
    if (isSetLogRequest()) {
      if (!first) sb.append(", ");
      sb.append("logRequest:");
      if (this.logRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.logRequest);
      }
      first = false;
    }
    if (isSetCasContainsRequest()) {
      if (!first) sb.append(", ");
      sb.append("casContainsRequest:");
      if (this.casContainsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.casContainsRequest);
      }
      first = false;
    }
    if (isSetCreateBuildRequest()) {
      if (!first) sb.append(", ");
      sb.append("createBuildRequest:");
      if (this.createBuildRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.createBuildRequest);
      }
      first = false;
    }
    if (isSetStoreLocalChangesRequest()) {
      if (!first) sb.append(", ");
      sb.append("storeLocalChangesRequest:");
      if (this.storeLocalChangesRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.storeLocalChangesRequest);
      }
      first = false;
    }
    if (isSetFetchSourceFilesRequest()) {
      if (!first) sb.append(", ");
      sb.append("fetchSourceFilesRequest:");
      if (this.fetchSourceFilesRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.fetchSourceFilesRequest);
      }
      first = false;
    }
    if (isSetStoreBuildGraphRequest()) {
      if (!first) sb.append(", ");
      sb.append("storeBuildGraphRequest:");
      if (this.storeBuildGraphRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.storeBuildGraphRequest);
      }
      first = false;
    }
    if (isSetFetchBuildGraphRequest()) {
      if (!first) sb.append(", ");
      sb.append("fetchBuildGraphRequest:");
      if (this.fetchBuildGraphRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.fetchBuildGraphRequest);
      }
      first = false;
    }
    if (isSetSetBuckVersionRequest()) {
      if (!first) sb.append(", ");
      sb.append("setBuckVersionRequest:");
      if (this.setBuckVersionRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.setBuckVersionRequest);
      }
      first = false;
    }
    if (isSetAnnouncementRequest()) {
      if (!first) sb.append(", ");
      sb.append("announcementRequest:");
      if (this.announcementRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.announcementRequest);
      }
      first = false;
    }
    if (isSetSetBuckDotFilePathsRequest()) {
      if (!first) sb.append(", ");
      sb.append("setBuckDotFilePathsRequest:");
      if (this.setBuckDotFilePathsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.setBuckDotFilePathsRequest);
      }
      first = false;
    }
    if (isSetMultiGetBuildSlaveLogDirRequest()) {
      if (!first) sb.append(", ");
      sb.append("multiGetBuildSlaveLogDirRequest:");
      if (this.multiGetBuildSlaveLogDirRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.multiGetBuildSlaveLogDirRequest);
      }
      first = false;
    }
    if (isSetMultiGetBuildSlaveRealTimeLogsRequest()) {
      if (!first) sb.append(", ");
      sb.append("multiGetBuildSlaveRealTimeLogsRequest:");
      if (this.multiGetBuildSlaveRealTimeLogsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.multiGetBuildSlaveRealTimeLogsRequest);
      }
      first = false;
    }
    if (isSetUpdateBuildSlaveStatusRequest()) {
      if (!first) sb.append(", ");
      sb.append("updateBuildSlaveStatusRequest:");
      if (this.updateBuildSlaveStatusRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.updateBuildSlaveStatusRequest);
      }
      first = false;
    }
    if (isSetFetchBuildSlaveStatusRequest()) {
      if (!first) sb.append(", ");
      sb.append("fetchBuildSlaveStatusRequest:");
      if (this.fetchBuildSlaveStatusRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.fetchBuildSlaveStatusRequest);
      }
      first = false;
    }
    if (isSetAppendBuildSlaveEventsRequest()) {
      if (!first) sb.append(", ");
      sb.append("appendBuildSlaveEventsRequest:");
      if (this.appendBuildSlaveEventsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.appendBuildSlaveEventsRequest);
      }
      first = false;
    }
    if (isSetMultiGetBuildSlaveEventsRequest()) {
      if (!first) sb.append(", ");
      sb.append("multiGetBuildSlaveEventsRequest:");
      if (this.multiGetBuildSlaveEventsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.multiGetBuildSlaveEventsRequest);
      }
      first = false;
    }
    if (isSetFetchRuleKeyLogsRequest()) {
      if (!first) sb.append(", ");
      sb.append("fetchRuleKeyLogsRequest:");
      if (this.fetchRuleKeyLogsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.fetchRuleKeyLogsRequest);
      }
      first = false;
    }
    if (isSetStoreBuildSlaveFinishedStatsRequest()) {
      if (!first) sb.append(", ");
      sb.append("storeBuildSlaveFinishedStatsRequest:");
      if (this.storeBuildSlaveFinishedStatsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.storeBuildSlaveFinishedStatsRequest);
      }
      first = false;
    }
    if (isSetFetchBuildSlaveFinishedStatsRequest()) {
      if (!first) sb.append(", ");
      sb.append("fetchBuildSlaveFinishedStatsRequest:");
      if (this.fetchBuildSlaveFinishedStatsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.fetchBuildSlaveFinishedStatsRequest);
      }
      first = false;
    }
    if (isSetSetCoordinatorRequest()) {
      if (!first) sb.append(", ");
      sb.append("setCoordinatorRequest:");
      if (this.setCoordinatorRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.setCoordinatorRequest);
      }
      first = false;
    }
    if (isSetEnqueueMinionsRequest()) {
      if (!first) sb.append(", ");
      sb.append("enqueueMinionsRequest:");
      if (this.enqueueMinionsRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.enqueueMinionsRequest);
      }
      first = false;
    }
    if (isSetSetFinalBuildStatusRequest()) {
      if (!first) sb.append(", ");
      sb.append("setFinalBuildStatusRequest:");
      if (this.setFinalBuildStatusRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.setFinalBuildStatusRequest);
      }
      first = false;
    }
    if (isSetReportCoordinatorAliveRequest()) {
      if (!first) sb.append(", ");
      sb.append("reportCoordinatorAliveRequest:");
      if (this.reportCoordinatorAliveRequest == null) {
        sb.append("null");
      } else {
        sb.append(this.reportCoordinatorAliveRequest);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (startBuildRequest != null) {
      startBuildRequest.validate();
    }
    if (buildStatusRequest != null) {
      buildStatusRequest.validate();
    }
    if (logRequest != null) {
      logRequest.validate();
    }
    if (casContainsRequest != null) {
      casContainsRequest.validate();
    }
    if (createBuildRequest != null) {
      createBuildRequest.validate();
    }
    if (storeLocalChangesRequest != null) {
      storeLocalChangesRequest.validate();
    }
    if (fetchSourceFilesRequest != null) {
      fetchSourceFilesRequest.validate();
    }
    if (storeBuildGraphRequest != null) {
      storeBuildGraphRequest.validate();
    }
    if (fetchBuildGraphRequest != null) {
      fetchBuildGraphRequest.validate();
    }
    if (setBuckVersionRequest != null) {
      setBuckVersionRequest.validate();
    }
    if (announcementRequest != null) {
      announcementRequest.validate();
    }
    if (setBuckDotFilePathsRequest != null) {
      setBuckDotFilePathsRequest.validate();
    }
    if (multiGetBuildSlaveLogDirRequest != null) {
      multiGetBuildSlaveLogDirRequest.validate();
    }
    if (multiGetBuildSlaveRealTimeLogsRequest != null) {
      multiGetBuildSlaveRealTimeLogsRequest.validate();
    }
    if (updateBuildSlaveStatusRequest != null) {
      updateBuildSlaveStatusRequest.validate();
    }
    if (fetchBuildSlaveStatusRequest != null) {
      fetchBuildSlaveStatusRequest.validate();
    }
    if (appendBuildSlaveEventsRequest != null) {
      appendBuildSlaveEventsRequest.validate();
    }
    if (multiGetBuildSlaveEventsRequest != null) {
      multiGetBuildSlaveEventsRequest.validate();
    }
    if (fetchRuleKeyLogsRequest != null) {
      fetchRuleKeyLogsRequest.validate();
    }
    if (storeBuildSlaveFinishedStatsRequest != null) {
      storeBuildSlaveFinishedStatsRequest.validate();
    }
    if (fetchBuildSlaveFinishedStatsRequest != null) {
      fetchBuildSlaveFinishedStatsRequest.validate();
    }
    if (setCoordinatorRequest != null) {
      setCoordinatorRequest.validate();
    }
    if (enqueueMinionsRequest != null) {
      enqueueMinionsRequest.validate();
    }
    if (setFinalBuildStatusRequest != null) {
      setFinalBuildStatusRequest.validate();
    }
    if (reportCoordinatorAliveRequest != null) {
      reportCoordinatorAliveRequest.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FrontendRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FrontendRequestStandardScheme getScheme() {
      return new FrontendRequestStandardScheme();
    }
  }

  private static class FrontendRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<FrontendRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FrontendRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = com.facebook.buck.distributed.thrift.FrontendRequestType.findByValue(iprot.readI32());
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // START_BUILD_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.startBuildRequest = new StartBuildRequest();
              struct.startBuildRequest.read(iprot);
              struct.setStartBuildRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BUILD_STATUS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.buildStatusRequest = new BuildStatusRequest();
              struct.buildStatusRequest.read(iprot);
              struct.setBuildStatusRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LOG_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.logRequest = new LogRequest();
              struct.logRequest.read(iprot);
              struct.setLogRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CAS_CONTAINS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.casContainsRequest = new CASContainsRequest();
              struct.casContainsRequest.read(iprot);
              struct.setCasContainsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_BUILD_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.createBuildRequest = new CreateBuildRequest();
              struct.createBuildRequest.read(iprot);
              struct.setCreateBuildRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // STORE_LOCAL_CHANGES_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.storeLocalChangesRequest = new StoreLocalChangesRequest();
              struct.storeLocalChangesRequest.read(iprot);
              struct.setStoreLocalChangesRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // FETCH_SOURCE_FILES_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fetchSourceFilesRequest = new FetchSourceFilesRequest();
              struct.fetchSourceFilesRequest.read(iprot);
              struct.setFetchSourceFilesRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // STORE_BUILD_GRAPH_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.storeBuildGraphRequest = new StoreBuildGraphRequest();
              struct.storeBuildGraphRequest.read(iprot);
              struct.setStoreBuildGraphRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // FETCH_BUILD_GRAPH_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fetchBuildGraphRequest = new FetchBuildGraphRequest();
              struct.fetchBuildGraphRequest.read(iprot);
              struct.setFetchBuildGraphRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SET_BUCK_VERSION_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.setBuckVersionRequest = new SetBuckVersionRequest();
              struct.setBuckVersionRequest.read(iprot);
              struct.setSetBuckVersionRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ANNOUNCEMENT_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.announcementRequest = new AnnouncementRequest();
              struct.announcementRequest.read(iprot);
              struct.setAnnouncementRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SET_BUCK_DOT_FILE_PATHS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.setBuckDotFilePathsRequest = new SetBuckDotFilePathsRequest();
              struct.setBuckDotFilePathsRequest.read(iprot);
              struct.setSetBuckDotFilePathsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.multiGetBuildSlaveLogDirRequest = new MultiGetBuildSlaveLogDirRequest();
              struct.multiGetBuildSlaveLogDirRequest.read(iprot);
              struct.setMultiGetBuildSlaveLogDirRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.multiGetBuildSlaveRealTimeLogsRequest = new MultiGetBuildSlaveRealTimeLogsRequest();
              struct.multiGetBuildSlaveRealTimeLogsRequest.read(iprot);
              struct.setMultiGetBuildSlaveRealTimeLogsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // UPDATE_BUILD_SLAVE_STATUS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.updateBuildSlaveStatusRequest = new UpdateBuildSlaveStatusRequest();
              struct.updateBuildSlaveStatusRequest.read(iprot);
              struct.setUpdateBuildSlaveStatusRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // FETCH_BUILD_SLAVE_STATUS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fetchBuildSlaveStatusRequest = new FetchBuildSlaveStatusRequest();
              struct.fetchBuildSlaveStatusRequest.read(iprot);
              struct.setFetchBuildSlaveStatusRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // APPEND_BUILD_SLAVE_EVENTS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.appendBuildSlaveEventsRequest = new AppendBuildSlaveEventsRequest();
              struct.appendBuildSlaveEventsRequest.read(iprot);
              struct.setAppendBuildSlaveEventsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.multiGetBuildSlaveEventsRequest = new MultiGetBuildSlaveEventsRequest();
              struct.multiGetBuildSlaveEventsRequest.read(iprot);
              struct.setMultiGetBuildSlaveEventsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // FETCH_RULE_KEY_LOGS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fetchRuleKeyLogsRequest = new FetchRuleKeyLogsRequest();
              struct.fetchRuleKeyLogsRequest.read(iprot);
              struct.setFetchRuleKeyLogsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.storeBuildSlaveFinishedStatsRequest = new StoreBuildSlaveFinishedStatsRequest();
              struct.storeBuildSlaveFinishedStatsRequest.read(iprot);
              struct.setStoreBuildSlaveFinishedStatsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fetchBuildSlaveFinishedStatsRequest = new FetchBuildSlaveFinishedStatsRequest();
              struct.fetchBuildSlaveFinishedStatsRequest.read(iprot);
              struct.setFetchBuildSlaveFinishedStatsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // SET_COORDINATOR_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.setCoordinatorRequest = new SetCoordinatorRequest();
              struct.setCoordinatorRequest.read(iprot);
              struct.setSetCoordinatorRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // ENQUEUE_MINIONS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.enqueueMinionsRequest = new EnqueueMinionsRequest();
              struct.enqueueMinionsRequest.read(iprot);
              struct.setEnqueueMinionsRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // SET_FINAL_BUILD_STATUS_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.setFinalBuildStatusRequest = new SetFinalBuildStatusRequest();
              struct.setFinalBuildStatusRequest.read(iprot);
              struct.setSetFinalBuildStatusRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // REPORT_COORDINATOR_ALIVE_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.reportCoordinatorAliveRequest = new ReportCoordinatorAliveRequest();
              struct.reportCoordinatorAliveRequest.read(iprot);
              struct.setReportCoordinatorAliveRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FrontendRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.type != null) {
        if (struct.isSetType()) {
          oprot.writeFieldBegin(TYPE_FIELD_DESC);
          oprot.writeI32(struct.type.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.startBuildRequest != null) {
        if (struct.isSetStartBuildRequest()) {
          oprot.writeFieldBegin(START_BUILD_REQUEST_FIELD_DESC);
          struct.startBuildRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.buildStatusRequest != null) {
        if (struct.isSetBuildStatusRequest()) {
          oprot.writeFieldBegin(BUILD_STATUS_REQUEST_FIELD_DESC);
          struct.buildStatusRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.logRequest != null) {
        if (struct.isSetLogRequest()) {
          oprot.writeFieldBegin(LOG_REQUEST_FIELD_DESC);
          struct.logRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.casContainsRequest != null) {
        if (struct.isSetCasContainsRequest()) {
          oprot.writeFieldBegin(CAS_CONTAINS_REQUEST_FIELD_DESC);
          struct.casContainsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.createBuildRequest != null) {
        if (struct.isSetCreateBuildRequest()) {
          oprot.writeFieldBegin(CREATE_BUILD_REQUEST_FIELD_DESC);
          struct.createBuildRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.storeLocalChangesRequest != null) {
        if (struct.isSetStoreLocalChangesRequest()) {
          oprot.writeFieldBegin(STORE_LOCAL_CHANGES_REQUEST_FIELD_DESC);
          struct.storeLocalChangesRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fetchSourceFilesRequest != null) {
        if (struct.isSetFetchSourceFilesRequest()) {
          oprot.writeFieldBegin(FETCH_SOURCE_FILES_REQUEST_FIELD_DESC);
          struct.fetchSourceFilesRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.storeBuildGraphRequest != null) {
        if (struct.isSetStoreBuildGraphRequest()) {
          oprot.writeFieldBegin(STORE_BUILD_GRAPH_REQUEST_FIELD_DESC);
          struct.storeBuildGraphRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fetchBuildGraphRequest != null) {
        if (struct.isSetFetchBuildGraphRequest()) {
          oprot.writeFieldBegin(FETCH_BUILD_GRAPH_REQUEST_FIELD_DESC);
          struct.fetchBuildGraphRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.setBuckVersionRequest != null) {
        if (struct.isSetSetBuckVersionRequest()) {
          oprot.writeFieldBegin(SET_BUCK_VERSION_REQUEST_FIELD_DESC);
          struct.setBuckVersionRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.announcementRequest != null) {
        if (struct.isSetAnnouncementRequest()) {
          oprot.writeFieldBegin(ANNOUNCEMENT_REQUEST_FIELD_DESC);
          struct.announcementRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.setBuckDotFilePathsRequest != null) {
        if (struct.isSetSetBuckDotFilePathsRequest()) {
          oprot.writeFieldBegin(SET_BUCK_DOT_FILE_PATHS_REQUEST_FIELD_DESC);
          struct.setBuckDotFilePathsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.multiGetBuildSlaveLogDirRequest != null) {
        if (struct.isSetMultiGetBuildSlaveLogDirRequest()) {
          oprot.writeFieldBegin(MULTI_GET_BUILD_SLAVE_LOG_DIR_REQUEST_FIELD_DESC);
          struct.multiGetBuildSlaveLogDirRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.multiGetBuildSlaveRealTimeLogsRequest != null) {
        if (struct.isSetMultiGetBuildSlaveRealTimeLogsRequest()) {
          oprot.writeFieldBegin(MULTI_GET_BUILD_SLAVE_REAL_TIME_LOGS_REQUEST_FIELD_DESC);
          struct.multiGetBuildSlaveRealTimeLogsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateBuildSlaveStatusRequest != null) {
        if (struct.isSetUpdateBuildSlaveStatusRequest()) {
          oprot.writeFieldBegin(UPDATE_BUILD_SLAVE_STATUS_REQUEST_FIELD_DESC);
          struct.updateBuildSlaveStatusRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fetchBuildSlaveStatusRequest != null) {
        if (struct.isSetFetchBuildSlaveStatusRequest()) {
          oprot.writeFieldBegin(FETCH_BUILD_SLAVE_STATUS_REQUEST_FIELD_DESC);
          struct.fetchBuildSlaveStatusRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appendBuildSlaveEventsRequest != null) {
        if (struct.isSetAppendBuildSlaveEventsRequest()) {
          oprot.writeFieldBegin(APPEND_BUILD_SLAVE_EVENTS_REQUEST_FIELD_DESC);
          struct.appendBuildSlaveEventsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.multiGetBuildSlaveEventsRequest != null) {
        if (struct.isSetMultiGetBuildSlaveEventsRequest()) {
          oprot.writeFieldBegin(MULTI_GET_BUILD_SLAVE_EVENTS_REQUEST_FIELD_DESC);
          struct.multiGetBuildSlaveEventsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fetchRuleKeyLogsRequest != null) {
        if (struct.isSetFetchRuleKeyLogsRequest()) {
          oprot.writeFieldBegin(FETCH_RULE_KEY_LOGS_REQUEST_FIELD_DESC);
          struct.fetchRuleKeyLogsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.storeBuildSlaveFinishedStatsRequest != null) {
        if (struct.isSetStoreBuildSlaveFinishedStatsRequest()) {
          oprot.writeFieldBegin(STORE_BUILD_SLAVE_FINISHED_STATS_REQUEST_FIELD_DESC);
          struct.storeBuildSlaveFinishedStatsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fetchBuildSlaveFinishedStatsRequest != null) {
        if (struct.isSetFetchBuildSlaveFinishedStatsRequest()) {
          oprot.writeFieldBegin(FETCH_BUILD_SLAVE_FINISHED_STATS_REQUEST_FIELD_DESC);
          struct.fetchBuildSlaveFinishedStatsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.setCoordinatorRequest != null) {
        if (struct.isSetSetCoordinatorRequest()) {
          oprot.writeFieldBegin(SET_COORDINATOR_REQUEST_FIELD_DESC);
          struct.setCoordinatorRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.enqueueMinionsRequest != null) {
        if (struct.isSetEnqueueMinionsRequest()) {
          oprot.writeFieldBegin(ENQUEUE_MINIONS_REQUEST_FIELD_DESC);
          struct.enqueueMinionsRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.setFinalBuildStatusRequest != null) {
        if (struct.isSetSetFinalBuildStatusRequest()) {
          oprot.writeFieldBegin(SET_FINAL_BUILD_STATUS_REQUEST_FIELD_DESC);
          struct.setFinalBuildStatusRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.reportCoordinatorAliveRequest != null) {
        if (struct.isSetReportCoordinatorAliveRequest()) {
          oprot.writeFieldBegin(REPORT_COORDINATOR_ALIVE_REQUEST_FIELD_DESC);
          struct.reportCoordinatorAliveRequest.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FrontendRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FrontendRequestTupleScheme getScheme() {
      return new FrontendRequestTupleScheme();
    }
  }

  private static class FrontendRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<FrontendRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FrontendRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetType()) {
        optionals.set(0);
      }
      if (struct.isSetStartBuildRequest()) {
        optionals.set(1);
      }
      if (struct.isSetBuildStatusRequest()) {
        optionals.set(2);
      }
      if (struct.isSetLogRequest()) {
        optionals.set(3);
      }
      if (struct.isSetCasContainsRequest()) {
        optionals.set(4);
      }
      if (struct.isSetCreateBuildRequest()) {
        optionals.set(5);
      }
      if (struct.isSetStoreLocalChangesRequest()) {
        optionals.set(6);
      }
      if (struct.isSetFetchSourceFilesRequest()) {
        optionals.set(7);
      }
      if (struct.isSetStoreBuildGraphRequest()) {
        optionals.set(8);
      }
      if (struct.isSetFetchBuildGraphRequest()) {
        optionals.set(9);
      }
      if (struct.isSetSetBuckVersionRequest()) {
        optionals.set(10);
      }
      if (struct.isSetAnnouncementRequest()) {
        optionals.set(11);
      }
      if (struct.isSetSetBuckDotFilePathsRequest()) {
        optionals.set(12);
      }
      if (struct.isSetMultiGetBuildSlaveLogDirRequest()) {
        optionals.set(13);
      }
      if (struct.isSetMultiGetBuildSlaveRealTimeLogsRequest()) {
        optionals.set(14);
      }
      if (struct.isSetUpdateBuildSlaveStatusRequest()) {
        optionals.set(15);
      }
      if (struct.isSetFetchBuildSlaveStatusRequest()) {
        optionals.set(16);
      }
      if (struct.isSetAppendBuildSlaveEventsRequest()) {
        optionals.set(17);
      }
      if (struct.isSetMultiGetBuildSlaveEventsRequest()) {
        optionals.set(18);
      }
      if (struct.isSetFetchRuleKeyLogsRequest()) {
        optionals.set(19);
      }
      if (struct.isSetStoreBuildSlaveFinishedStatsRequest()) {
        optionals.set(20);
      }
      if (struct.isSetFetchBuildSlaveFinishedStatsRequest()) {
        optionals.set(21);
      }
      if (struct.isSetSetCoordinatorRequest()) {
        optionals.set(22);
      }
      if (struct.isSetEnqueueMinionsRequest()) {
        optionals.set(23);
      }
      if (struct.isSetSetFinalBuildStatusRequest()) {
        optionals.set(24);
      }
      if (struct.isSetReportCoordinatorAliveRequest()) {
        optionals.set(25);
      }
      oprot.writeBitSet(optionals, 26);
      if (struct.isSetType()) {
        oprot.writeI32(struct.type.getValue());
      }
      if (struct.isSetStartBuildRequest()) {
        struct.startBuildRequest.write(oprot);
      }
      if (struct.isSetBuildStatusRequest()) {
        struct.buildStatusRequest.write(oprot);
      }
      if (struct.isSetLogRequest()) {
        struct.logRequest.write(oprot);
      }
      if (struct.isSetCasContainsRequest()) {
        struct.casContainsRequest.write(oprot);
      }
      if (struct.isSetCreateBuildRequest()) {
        struct.createBuildRequest.write(oprot);
      }
      if (struct.isSetStoreLocalChangesRequest()) {
        struct.storeLocalChangesRequest.write(oprot);
      }
      if (struct.isSetFetchSourceFilesRequest()) {
        struct.fetchSourceFilesRequest.write(oprot);
      }
      if (struct.isSetStoreBuildGraphRequest()) {
        struct.storeBuildGraphRequest.write(oprot);
      }
      if (struct.isSetFetchBuildGraphRequest()) {
        struct.fetchBuildGraphRequest.write(oprot);
      }
      if (struct.isSetSetBuckVersionRequest()) {
        struct.setBuckVersionRequest.write(oprot);
      }
      if (struct.isSetAnnouncementRequest()) {
        struct.announcementRequest.write(oprot);
      }
      if (struct.isSetSetBuckDotFilePathsRequest()) {
        struct.setBuckDotFilePathsRequest.write(oprot);
      }
      if (struct.isSetMultiGetBuildSlaveLogDirRequest()) {
        struct.multiGetBuildSlaveLogDirRequest.write(oprot);
      }
      if (struct.isSetMultiGetBuildSlaveRealTimeLogsRequest()) {
        struct.multiGetBuildSlaveRealTimeLogsRequest.write(oprot);
      }
      if (struct.isSetUpdateBuildSlaveStatusRequest()) {
        struct.updateBuildSlaveStatusRequest.write(oprot);
      }
      if (struct.isSetFetchBuildSlaveStatusRequest()) {
        struct.fetchBuildSlaveStatusRequest.write(oprot);
      }
      if (struct.isSetAppendBuildSlaveEventsRequest()) {
        struct.appendBuildSlaveEventsRequest.write(oprot);
      }
      if (struct.isSetMultiGetBuildSlaveEventsRequest()) {
        struct.multiGetBuildSlaveEventsRequest.write(oprot);
      }
      if (struct.isSetFetchRuleKeyLogsRequest()) {
        struct.fetchRuleKeyLogsRequest.write(oprot);
      }
      if (struct.isSetStoreBuildSlaveFinishedStatsRequest()) {
        struct.storeBuildSlaveFinishedStatsRequest.write(oprot);
      }
      if (struct.isSetFetchBuildSlaveFinishedStatsRequest()) {
        struct.fetchBuildSlaveFinishedStatsRequest.write(oprot);
      }
      if (struct.isSetSetCoordinatorRequest()) {
        struct.setCoordinatorRequest.write(oprot);
      }
      if (struct.isSetEnqueueMinionsRequest()) {
        struct.enqueueMinionsRequest.write(oprot);
      }
      if (struct.isSetSetFinalBuildStatusRequest()) {
        struct.setFinalBuildStatusRequest.write(oprot);
      }
      if (struct.isSetReportCoordinatorAliveRequest()) {
        struct.reportCoordinatorAliveRequest.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FrontendRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(26);
      if (incoming.get(0)) {
        struct.type = com.facebook.buck.distributed.thrift.FrontendRequestType.findByValue(iprot.readI32());
        struct.setTypeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.startBuildRequest = new StartBuildRequest();
        struct.startBuildRequest.read(iprot);
        struct.setStartBuildRequestIsSet(true);
      }
      if (incoming.get(2)) {
        struct.buildStatusRequest = new BuildStatusRequest();
        struct.buildStatusRequest.read(iprot);
        struct.setBuildStatusRequestIsSet(true);
      }
      if (incoming.get(3)) {
        struct.logRequest = new LogRequest();
        struct.logRequest.read(iprot);
        struct.setLogRequestIsSet(true);
      }
      if (incoming.get(4)) {
        struct.casContainsRequest = new CASContainsRequest();
        struct.casContainsRequest.read(iprot);
        struct.setCasContainsRequestIsSet(true);
      }
      if (incoming.get(5)) {
        struct.createBuildRequest = new CreateBuildRequest();
        struct.createBuildRequest.read(iprot);
        struct.setCreateBuildRequestIsSet(true);
      }
      if (incoming.get(6)) {
        struct.storeLocalChangesRequest = new StoreLocalChangesRequest();
        struct.storeLocalChangesRequest.read(iprot);
        struct.setStoreLocalChangesRequestIsSet(true);
      }
      if (incoming.get(7)) {
        struct.fetchSourceFilesRequest = new FetchSourceFilesRequest();
        struct.fetchSourceFilesRequest.read(iprot);
        struct.setFetchSourceFilesRequestIsSet(true);
      }
      if (incoming.get(8)) {
        struct.storeBuildGraphRequest = new StoreBuildGraphRequest();
        struct.storeBuildGraphRequest.read(iprot);
        struct.setStoreBuildGraphRequestIsSet(true);
      }
      if (incoming.get(9)) {
        struct.fetchBuildGraphRequest = new FetchBuildGraphRequest();
        struct.fetchBuildGraphRequest.read(iprot);
        struct.setFetchBuildGraphRequestIsSet(true);
      }
      if (incoming.get(10)) {
        struct.setBuckVersionRequest = new SetBuckVersionRequest();
        struct.setBuckVersionRequest.read(iprot);
        struct.setSetBuckVersionRequestIsSet(true);
      }
      if (incoming.get(11)) {
        struct.announcementRequest = new AnnouncementRequest();
        struct.announcementRequest.read(iprot);
        struct.setAnnouncementRequestIsSet(true);
      }
      if (incoming.get(12)) {
        struct.setBuckDotFilePathsRequest = new SetBuckDotFilePathsRequest();
        struct.setBuckDotFilePathsRequest.read(iprot);
        struct.setSetBuckDotFilePathsRequestIsSet(true);
      }
      if (incoming.get(13)) {
        struct.multiGetBuildSlaveLogDirRequest = new MultiGetBuildSlaveLogDirRequest();
        struct.multiGetBuildSlaveLogDirRequest.read(iprot);
        struct.setMultiGetBuildSlaveLogDirRequestIsSet(true);
      }
      if (incoming.get(14)) {
        struct.multiGetBuildSlaveRealTimeLogsRequest = new MultiGetBuildSlaveRealTimeLogsRequest();
        struct.multiGetBuildSlaveRealTimeLogsRequest.read(iprot);
        struct.setMultiGetBuildSlaveRealTimeLogsRequestIsSet(true);
      }
      if (incoming.get(15)) {
        struct.updateBuildSlaveStatusRequest = new UpdateBuildSlaveStatusRequest();
        struct.updateBuildSlaveStatusRequest.read(iprot);
        struct.setUpdateBuildSlaveStatusRequestIsSet(true);
      }
      if (incoming.get(16)) {
        struct.fetchBuildSlaveStatusRequest = new FetchBuildSlaveStatusRequest();
        struct.fetchBuildSlaveStatusRequest.read(iprot);
        struct.setFetchBuildSlaveStatusRequestIsSet(true);
      }
      if (incoming.get(17)) {
        struct.appendBuildSlaveEventsRequest = new AppendBuildSlaveEventsRequest();
        struct.appendBuildSlaveEventsRequest.read(iprot);
        struct.setAppendBuildSlaveEventsRequestIsSet(true);
      }
      if (incoming.get(18)) {
        struct.multiGetBuildSlaveEventsRequest = new MultiGetBuildSlaveEventsRequest();
        struct.multiGetBuildSlaveEventsRequest.read(iprot);
        struct.setMultiGetBuildSlaveEventsRequestIsSet(true);
      }
      if (incoming.get(19)) {
        struct.fetchRuleKeyLogsRequest = new FetchRuleKeyLogsRequest();
        struct.fetchRuleKeyLogsRequest.read(iprot);
        struct.setFetchRuleKeyLogsRequestIsSet(true);
      }
      if (incoming.get(20)) {
        struct.storeBuildSlaveFinishedStatsRequest = new StoreBuildSlaveFinishedStatsRequest();
        struct.storeBuildSlaveFinishedStatsRequest.read(iprot);
        struct.setStoreBuildSlaveFinishedStatsRequestIsSet(true);
      }
      if (incoming.get(21)) {
        struct.fetchBuildSlaveFinishedStatsRequest = new FetchBuildSlaveFinishedStatsRequest();
        struct.fetchBuildSlaveFinishedStatsRequest.read(iprot);
        struct.setFetchBuildSlaveFinishedStatsRequestIsSet(true);
      }
      if (incoming.get(22)) {
        struct.setCoordinatorRequest = new SetCoordinatorRequest();
        struct.setCoordinatorRequest.read(iprot);
        struct.setSetCoordinatorRequestIsSet(true);
      }
      if (incoming.get(23)) {
        struct.enqueueMinionsRequest = new EnqueueMinionsRequest();
        struct.enqueueMinionsRequest.read(iprot);
        struct.setEnqueueMinionsRequestIsSet(true);
      }
      if (incoming.get(24)) {
        struct.setFinalBuildStatusRequest = new SetFinalBuildStatusRequest();
        struct.setFinalBuildStatusRequest.read(iprot);
        struct.setSetFinalBuildStatusRequestIsSet(true);
      }
      if (incoming.get(25)) {
        struct.reportCoordinatorAliveRequest = new ReportCoordinatorAliveRequest();
        struct.reportCoordinatorAliveRequest.read(iprot);
        struct.setReportCoordinatorAliveRequestIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

