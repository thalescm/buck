/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.facebook.buck.distributed.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum FrontendRequestType implements org.apache.thrift.TEnum {
  UNKNOWN(0),
  START_BUILD(1),
  BUILD_STATUS(2),
  LOG(5),
  CAS_CONTAINS(6),
  CREATE_BUILD(7),
  STORE_LOCAL_CHANGES(8),
  FETCH_SRC_FILES(9),
  STORE_BUILD_GRAPH(10),
  FETCH_BUILD_GRAPH(11),
  SET_BUCK_VERSION(12),
  ANNOUNCEMENT(13),
  SET_DOTFILE_PATHS(14),
  GET_BUILD_SLAVE_LOG_DIR(15),
  GET_BUILD_SLAVE_REAL_TIME_LOGS(16),
  UPDATE_BUILD_SLAVE_STATUS(17),
  FETCH_BUILD_SLAVE_STATUS(18),
  APPEND_BUILD_SLAVE_EVENTS(19),
  MULTI_GET_BUILD_SLAVE_EVENTS(20),
  SET_BUILD_MODE(21),
  FETCH_RULE_KEY_LOGS(22),
  STORE_BUILD_SLAVE_FINISHED_STATS(23),
  FETCH_BUILD_SLAVE_FINISHED_STATS(24),
  SET_COORDINATOR(25),
  ENQUEUE_MINIONS(26),
  SET_FINAL_BUILD_STATUS(27),
  REPORT_COORDINATOR_ALIVE(28);

  private final int value;

  private FrontendRequestType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static FrontendRequestType findByValue(int value) { 
    switch (value) {
      case 0:
        return UNKNOWN;
      case 1:
        return START_BUILD;
      case 2:
        return BUILD_STATUS;
      case 5:
        return LOG;
      case 6:
        return CAS_CONTAINS;
      case 7:
        return CREATE_BUILD;
      case 8:
        return STORE_LOCAL_CHANGES;
      case 9:
        return FETCH_SRC_FILES;
      case 10:
        return STORE_BUILD_GRAPH;
      case 11:
        return FETCH_BUILD_GRAPH;
      case 12:
        return SET_BUCK_VERSION;
      case 13:
        return ANNOUNCEMENT;
      case 14:
        return SET_DOTFILE_PATHS;
      case 15:
        return GET_BUILD_SLAVE_LOG_DIR;
      case 16:
        return GET_BUILD_SLAVE_REAL_TIME_LOGS;
      case 17:
        return UPDATE_BUILD_SLAVE_STATUS;
      case 18:
        return FETCH_BUILD_SLAVE_STATUS;
      case 19:
        return APPEND_BUILD_SLAVE_EVENTS;
      case 20:
        return MULTI_GET_BUILD_SLAVE_EVENTS;
      case 21:
        return SET_BUILD_MODE;
      case 22:
        return FETCH_RULE_KEY_LOGS;
      case 23:
        return STORE_BUILD_SLAVE_FINISHED_STATS;
      case 24:
        return FETCH_BUILD_SLAVE_FINISHED_STATS;
      case 25:
        return SET_COORDINATOR;
      case 26:
        return ENQUEUE_MINIONS;
      case 27:
        return SET_FINAL_BUILD_STATUS;
      case 28:
        return REPORT_COORDINATOR_ALIVE;
      default:
        return null;
    }
  }
}
