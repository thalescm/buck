/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.facebook.buck.distributed.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-02-01")
public class CoordinatorBuildProgress implements org.apache.thrift.TBase<CoordinatorBuildProgress, CoordinatorBuildProgress._Fields>, java.io.Serializable, Cloneable, Comparable<CoordinatorBuildProgress> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CoordinatorBuildProgress");

  private static final org.apache.thrift.protocol.TField TOTAL_RULES_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalRulesCount", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField BUILT_RULES_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("builtRulesCount", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField SKIPPED_RULES_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("skippedRulesCount", org.apache.thrift.protocol.TType.I32, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CoordinatorBuildProgressStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CoordinatorBuildProgressTupleSchemeFactory();

  public int totalRulesCount; // optional
  public int builtRulesCount; // optional
  public int skippedRulesCount; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TOTAL_RULES_COUNT((short)1, "totalRulesCount"),
    BUILT_RULES_COUNT((short)2, "builtRulesCount"),
    SKIPPED_RULES_COUNT((short)3, "skippedRulesCount");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TOTAL_RULES_COUNT
          return TOTAL_RULES_COUNT;
        case 2: // BUILT_RULES_COUNT
          return BUILT_RULES_COUNT;
        case 3: // SKIPPED_RULES_COUNT
          return SKIPPED_RULES_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOTALRULESCOUNT_ISSET_ID = 0;
  private static final int __BUILTRULESCOUNT_ISSET_ID = 1;
  private static final int __SKIPPEDRULESCOUNT_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TOTAL_RULES_COUNT,_Fields.BUILT_RULES_COUNT,_Fields.SKIPPED_RULES_COUNT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TOTAL_RULES_COUNT, new org.apache.thrift.meta_data.FieldMetaData("totalRulesCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BUILT_RULES_COUNT, new org.apache.thrift.meta_data.FieldMetaData("builtRulesCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SKIPPED_RULES_COUNT, new org.apache.thrift.meta_data.FieldMetaData("skippedRulesCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CoordinatorBuildProgress.class, metaDataMap);
  }

  public CoordinatorBuildProgress() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CoordinatorBuildProgress(CoordinatorBuildProgress other) {
    __isset_bitfield = other.__isset_bitfield;
    this.totalRulesCount = other.totalRulesCount;
    this.builtRulesCount = other.builtRulesCount;
    this.skippedRulesCount = other.skippedRulesCount;
  }

  public CoordinatorBuildProgress deepCopy() {
    return new CoordinatorBuildProgress(this);
  }

  @Override
  public void clear() {
    setTotalRulesCountIsSet(false);
    this.totalRulesCount = 0;
    setBuiltRulesCountIsSet(false);
    this.builtRulesCount = 0;
    setSkippedRulesCountIsSet(false);
    this.skippedRulesCount = 0;
  }

  public int getTotalRulesCount() {
    return this.totalRulesCount;
  }

  public CoordinatorBuildProgress setTotalRulesCount(int totalRulesCount) {
    this.totalRulesCount = totalRulesCount;
    setTotalRulesCountIsSet(true);
    return this;
  }

  public void unsetTotalRulesCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOTALRULESCOUNT_ISSET_ID);
  }

  /** Returns true if field totalRulesCount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalRulesCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOTALRULESCOUNT_ISSET_ID);
  }

  public void setTotalRulesCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOTALRULESCOUNT_ISSET_ID, value);
  }

  public int getBuiltRulesCount() {
    return this.builtRulesCount;
  }

  public CoordinatorBuildProgress setBuiltRulesCount(int builtRulesCount) {
    this.builtRulesCount = builtRulesCount;
    setBuiltRulesCountIsSet(true);
    return this;
  }

  public void unsetBuiltRulesCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BUILTRULESCOUNT_ISSET_ID);
  }

  /** Returns true if field builtRulesCount is set (has been assigned a value) and false otherwise */
  public boolean isSetBuiltRulesCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BUILTRULESCOUNT_ISSET_ID);
  }

  public void setBuiltRulesCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BUILTRULESCOUNT_ISSET_ID, value);
  }

  public int getSkippedRulesCount() {
    return this.skippedRulesCount;
  }

  public CoordinatorBuildProgress setSkippedRulesCount(int skippedRulesCount) {
    this.skippedRulesCount = skippedRulesCount;
    setSkippedRulesCountIsSet(true);
    return this;
  }

  public void unsetSkippedRulesCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SKIPPEDRULESCOUNT_ISSET_ID);
  }

  /** Returns true if field skippedRulesCount is set (has been assigned a value) and false otherwise */
  public boolean isSetSkippedRulesCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SKIPPEDRULESCOUNT_ISSET_ID);
  }

  public void setSkippedRulesCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SKIPPEDRULESCOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case TOTAL_RULES_COUNT:
      if (value == null) {
        unsetTotalRulesCount();
      } else {
        setTotalRulesCount((java.lang.Integer)value);
      }
      break;

    case BUILT_RULES_COUNT:
      if (value == null) {
        unsetBuiltRulesCount();
      } else {
        setBuiltRulesCount((java.lang.Integer)value);
      }
      break;

    case SKIPPED_RULES_COUNT:
      if (value == null) {
        unsetSkippedRulesCount();
      } else {
        setSkippedRulesCount((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TOTAL_RULES_COUNT:
      return getTotalRulesCount();

    case BUILT_RULES_COUNT:
      return getBuiltRulesCount();

    case SKIPPED_RULES_COUNT:
      return getSkippedRulesCount();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TOTAL_RULES_COUNT:
      return isSetTotalRulesCount();
    case BUILT_RULES_COUNT:
      return isSetBuiltRulesCount();
    case SKIPPED_RULES_COUNT:
      return isSetSkippedRulesCount();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof CoordinatorBuildProgress)
      return this.equals((CoordinatorBuildProgress)that);
    return false;
  }

  public boolean equals(CoordinatorBuildProgress that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_totalRulesCount = true && this.isSetTotalRulesCount();
    boolean that_present_totalRulesCount = true && that.isSetTotalRulesCount();
    if (this_present_totalRulesCount || that_present_totalRulesCount) {
      if (!(this_present_totalRulesCount && that_present_totalRulesCount))
        return false;
      if (this.totalRulesCount != that.totalRulesCount)
        return false;
    }

    boolean this_present_builtRulesCount = true && this.isSetBuiltRulesCount();
    boolean that_present_builtRulesCount = true && that.isSetBuiltRulesCount();
    if (this_present_builtRulesCount || that_present_builtRulesCount) {
      if (!(this_present_builtRulesCount && that_present_builtRulesCount))
        return false;
      if (this.builtRulesCount != that.builtRulesCount)
        return false;
    }

    boolean this_present_skippedRulesCount = true && this.isSetSkippedRulesCount();
    boolean that_present_skippedRulesCount = true && that.isSetSkippedRulesCount();
    if (this_present_skippedRulesCount || that_present_skippedRulesCount) {
      if (!(this_present_skippedRulesCount && that_present_skippedRulesCount))
        return false;
      if (this.skippedRulesCount != that.skippedRulesCount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetTotalRulesCount()) ? 131071 : 524287);
    if (isSetTotalRulesCount())
      hashCode = hashCode * 8191 + totalRulesCount;

    hashCode = hashCode * 8191 + ((isSetBuiltRulesCount()) ? 131071 : 524287);
    if (isSetBuiltRulesCount())
      hashCode = hashCode * 8191 + builtRulesCount;

    hashCode = hashCode * 8191 + ((isSetSkippedRulesCount()) ? 131071 : 524287);
    if (isSetSkippedRulesCount())
      hashCode = hashCode * 8191 + skippedRulesCount;

    return hashCode;
  }

  @Override
  public int compareTo(CoordinatorBuildProgress other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetTotalRulesCount()).compareTo(other.isSetTotalRulesCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalRulesCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalRulesCount, other.totalRulesCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBuiltRulesCount()).compareTo(other.isSetBuiltRulesCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuiltRulesCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.builtRulesCount, other.builtRulesCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSkippedRulesCount()).compareTo(other.isSetSkippedRulesCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSkippedRulesCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.skippedRulesCount, other.skippedRulesCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CoordinatorBuildProgress(");
    boolean first = true;

    if (isSetTotalRulesCount()) {
      sb.append("totalRulesCount:");
      sb.append(this.totalRulesCount);
      first = false;
    }
    if (isSetBuiltRulesCount()) {
      if (!first) sb.append(", ");
      sb.append("builtRulesCount:");
      sb.append(this.builtRulesCount);
      first = false;
    }
    if (isSetSkippedRulesCount()) {
      if (!first) sb.append(", ");
      sb.append("skippedRulesCount:");
      sb.append(this.skippedRulesCount);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CoordinatorBuildProgressStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CoordinatorBuildProgressStandardScheme getScheme() {
      return new CoordinatorBuildProgressStandardScheme();
    }
  }

  private static class CoordinatorBuildProgressStandardScheme extends org.apache.thrift.scheme.StandardScheme<CoordinatorBuildProgress> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CoordinatorBuildProgress struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TOTAL_RULES_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.totalRulesCount = iprot.readI32();
              struct.setTotalRulesCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BUILT_RULES_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.builtRulesCount = iprot.readI32();
              struct.setBuiltRulesCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SKIPPED_RULES_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.skippedRulesCount = iprot.readI32();
              struct.setSkippedRulesCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CoordinatorBuildProgress struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetTotalRulesCount()) {
        oprot.writeFieldBegin(TOTAL_RULES_COUNT_FIELD_DESC);
        oprot.writeI32(struct.totalRulesCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBuiltRulesCount()) {
        oprot.writeFieldBegin(BUILT_RULES_COUNT_FIELD_DESC);
        oprot.writeI32(struct.builtRulesCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSkippedRulesCount()) {
        oprot.writeFieldBegin(SKIPPED_RULES_COUNT_FIELD_DESC);
        oprot.writeI32(struct.skippedRulesCount);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CoordinatorBuildProgressTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CoordinatorBuildProgressTupleScheme getScheme() {
      return new CoordinatorBuildProgressTupleScheme();
    }
  }

  private static class CoordinatorBuildProgressTupleScheme extends org.apache.thrift.scheme.TupleScheme<CoordinatorBuildProgress> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CoordinatorBuildProgress struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetTotalRulesCount()) {
        optionals.set(0);
      }
      if (struct.isSetBuiltRulesCount()) {
        optionals.set(1);
      }
      if (struct.isSetSkippedRulesCount()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetTotalRulesCount()) {
        oprot.writeI32(struct.totalRulesCount);
      }
      if (struct.isSetBuiltRulesCount()) {
        oprot.writeI32(struct.builtRulesCount);
      }
      if (struct.isSetSkippedRulesCount()) {
        oprot.writeI32(struct.skippedRulesCount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CoordinatorBuildProgress struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.totalRulesCount = iprot.readI32();
        struct.setTotalRulesCountIsSet(true);
      }
      if (incoming.get(1)) {
        struct.builtRulesCount = iprot.readI32();
        struct.setBuiltRulesCountIsSet(true);
      }
      if (incoming.get(2)) {
        struct.skippedRulesCount = iprot.readI32();
        struct.setSkippedRulesCountIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

